<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <generator uri="http://jekyllrb.com" version="3.9.2">Jekyll</generator>
  
  
  <link href="https://dotkay.github.io/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://dotkay.github.io/" rel="alternate" type="text/html" hreflang="en" />
  <updated>2022-10-15T01:58:02+00:00</updated>
  <id>https://dotkay.github.io//</id>

  

  
    <subtitle>Learning by teaching</subtitle>
  

  

  
  
    <entry>
      
      <title type="html">Logic, Languages and Reasoning →</title>
      
      <link href="https://dotkay.github.io/2022/04/24/logic-languages-reasoning/" rel="alternate" type="text/html" title="Logic, Languages and Reasoning" />
      <published>2022-04-24T00:00:00+00:00</published>
      <updated>2022-04-24T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2022/04/24/logic-languages-reasoning</id>
      <content type="html" xml:base="https://dotkay.github.io/2022/04/24/logic-languages-reasoning/">&lt;p&gt;Human languages developed and evolved over thousands of years. Though most languages have a structure (defined by the rules of grammar) we think of spoken languages as a series of informal statements (“informal” compared to the “formal” rigor of mathematical statements). While informal statements helped human species to communicate and collaborate, eventually evolving languages themselves, informal statements were not enough for settling arguments, legal disputes or discovering (new) knowledge from existing knowledge. Socrates, Plato’s teacher, is credited with coming up with inductive arguments and universal definitions. Aristotle’s logic consisted of formulating statements and deriving new knowledge (conclusion) from the knowledge contained in a set of statements (&lt;em&gt;premises&lt;/em&gt;) guided by rules that he called &lt;em&gt;syllogisms&lt;/em&gt;. Aristotle, a student of Plato, is credited with the earliest study of logic, &lt;em&gt;formal logic&lt;/em&gt;, in his collected works &lt;em&gt;[Organon]&lt;/em&gt;(https://archive.org/details/AristotleOrganon/mode/2up). Plato also contributed to the study of reasoning. While Plato relied on &lt;em&gt;deduction&lt;/em&gt; from &lt;em&gt;a priori&lt;/em&gt; knowledge and postulated that knowledge of things that happen can be deduced from the knowledge of universal ideas, Aristotle’s epistemology postulated that knowledge of things that happen build up to universal knowledge collectively. Together the main recipes for reasoning - induction, deduction and abduction - were discovered that are the pillars for making reasoning infallible.&lt;/p&gt;

&lt;p&gt;Mathematicians developed it further for mathematical reasoning which got shaped, like many mathematical computations, into &lt;em&gt;automated reasoning&lt;/em&gt; using computer programs by computer scientists. Mathematical logic is the cornerstone of systems that are used for reasoning about the correctness of computer programs.&lt;/p&gt;

&lt;p&gt;We can use &lt;a href=&quot;https://www.nltk.org/&quot;&gt;NLTK&lt;/a&gt;’s Python API to play with it to see what it means to encode English sentences as logical formulas. Once we are able to encode knowledge (in English sentences) we can use well formed rules of logic to deduce new information, also called &lt;em&gt;logical inference&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nltk&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nltk&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_parser&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grammar_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'file:///nltk_data/grammars/book_grammars/simple-sem.fcfg'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grammar_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Angus gives a bone to every dog'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;trees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SEM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This gives the semantics in the form of a logical formula:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;all z2.(dog(z2) -&amp;gt; exists z1.(bone(z1) &amp;amp; give(angus,z1,z2)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Further more, one could use the theorem prover that comes along with NLTK to check for consistency among statements and prove goals (conclusion) given a list of statements (premises). For example, one could write&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mini_has_ball&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_expr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'has(mini)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mini2jane&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_expr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pass(mini, jane)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_expr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all x. all y. (pass(x, y) -&amp;gt; has(y))'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We just encoded some English statements as well as the assumption that if &lt;em&gt;x&lt;/em&gt; passes the ball to &lt;em&gt;y&lt;/em&gt;, then &lt;em&gt;y&lt;/em&gt; will have the ball. We can use a theorem prover to prove a goal that &lt;em&gt;jane has the ball&lt;/em&gt; and check if it follows from our assumptions, i.e. of the goal can be derived given the assumptions&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jane_has_ball&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_expr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'has(jane)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nltk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Prover9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jane_has_ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mini2jane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and the prover, if it can establish a proof, will return:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This kind of encoding and logical reasoning might be needed to answer questions like the last one we saw in a &lt;a href=&quot;https://dotkay.github.io/2022/03/21/languages-logic-computation&quot;&gt;previous post&lt;/a&gt;. One might also need more expressive logics in order to encode statements about temporal events succinctly. However, languages themselves are stochastic systems which would imply that we would never be able to come up with logically accurate formulations of the sentences we use in everyday conversations, especially when it involves conversations involving languages that are not one’s native language and might have grammatical mistakes and still convey the intended message. Legal documents or financial documents, for example, could be structured in a precise format that might allow one to formulate the sentences in a logical language and make queries that can return an accurate answer that can be reasoned about if needed - think of a healthcare database to which policy makers submit queries in a natural language. A deep learning based approach, which looks at several usage patterns, to arrive at an approximate formulation which would still enable one to deduce new information from a set of facts already provided. This would be more crucial in developing (explainable) AI systems that can be reasoned about, which is especially crucial in healthcare and other critical domains where AI systems are beginning to find their place.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images.metmuseum.org/CRDImages/ep/original/DP-13139-001.jpg#center&quot; alt=&quot;img&quot; /&gt;
&lt;em&gt;Death of Socrates, by Jacques Louis David (Credits: The Met)&lt;/em&gt;&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="NLP" />
      
        <category term="logic" />
      
        <category term="reasoning" />
      
        <category term="computation" />
      
        <category term="NLTK" />
      

      

      
        <summary type="html">Human languages developed and evolved over thousands of years. Though most languages have a structure (defined by the rules of grammar) we think of spoken languages as a series of informal statements (“informal” compared to the “formal” rigor of mathematical statements). While informal statements helped human species to communicate and collaborate, eventually evolving languages themselves, informal statements were not enough for settling arguments, legal disputes or discovering (new) knowledge from existing knowledge. Socrates, Plato’s teacher, is credited with coming up with inductive arguments and universal definitions. Aristotle’s logic consisted of formulating statements and deriving new knowledge (conclusion) from the knowledge contained in a set of statements (premises) guided by rules that he called syllogisms. Aristotle, a student of Plato, is credited with the earliest study of logic, formal logic, in his collected works [Organon](https://archive.org/details/AristotleOrganon/mode/2up). Plato also contributed to the study of reasoning. While Plato relied on deduction from a priori knowledge and postulated that knowledge of things that happen can be deduced from the knowledge of universal ideas, Aristotle’s epistemology postulated that knowledge of things that happen build up to universal knowledge collectively. Together the main recipes for reasoning - induction, deduction and abduction - were discovered that are the pillars for making reasoning infallible. Mathematicians developed it further for mathematical reasoning which got shaped, like many mathematical computations, into automated reasoning using computer programs by computer scientists. Mathematical logic is the cornerstone of systems that are used for reasoning about the correctness of computer programs. We can use NLTK’s Python API to play with it to see what it means to encode English sentences as logical formulas. Once we are able to encode knowledge (in English sentences) we can use well formed rules of logic to deduce new information, also called logical inference. import nltk from nltk import load_parser grammar_file = 'file:///nltk_data/grammars/book_grammars/simple-sem.fcfg' lp = load_parser(grammar_file) stmt = 'Angus gives a bone to every dog' trees = lp.parse(stmt.split()) for tree in trees: print(tree.label()['SEM']) This gives the semantics in the form of a logical formula: all z2.(dog(z2) -&amp;gt; exists z1.(bone(z1) &amp;amp; give(angus,z1,z2))) Further more, one could use the theorem prover that comes along with NLTK to check for consistency among statements and prove goals (conclusion) given a list of statements (premises). For example, one could write mini_has_ball = read_expr('has(mini)') mini2jane = read_expr('pass(mini, jane)') rules = read_expr('all x. all y. (pass(x, y) -&amp;gt; has(y))') We just encoded some English statements as well as the assumption that if x passes the ball to y, then y will have the ball. We can use a theorem prover to prove a goal that jane has the ball and check if it follows from our assumptions, i.e. of the goal can be derived given the assumptions jane_has_ball = read_expr('has(jane)') prover = nltk.Prover9() prover.prove(jane_has_ball, [rules, mini2jane]) and the prover, if it can establish a proof, will return: True This kind of encoding and logical reasoning might be needed to answer questions like the last one we saw in a previous post. One might also need more expressive logics in order to encode statements about temporal events succinctly. However, languages themselves are stochastic systems which would imply that we would never be able to come up with logically accurate formulations of the sentences we use in everyday conversations, especially when it involves conversations involving languages that are not one’s native language and might have grammatical mistakes and still convey the intended message. Legal documents or financial documents, for example, could be structured in a precise format that might allow one to formulate the sentences in a logical language and make queries that can return an accurate answer that can be reasoned about if needed - think of a healthcare database to which policy makers submit queries in a natural language. A deep learning based approach, which looks at several usage patterns, to arrive at an approximate formulation which would still enable one to deduce new information from a set of facts already provided. This would be more crucial in developing (explainable) AI systems that can be reasoned about, which is especially crucial in healthcare and other critical domains where AI systems are beginning to find their place. Death of Socrates, by Jacques Louis David (Credits: The Met)</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Languages, Logic and Computation →</title>
      
      <link href="https://dotkay.github.io/2022/03/21/languages-logic-computation/" rel="alternate" type="text/html" title="Languages, Logic and Computation" />
      <published>2022-03-21T00:00:00+00:00</published>
      <updated>2022-03-21T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2022/03/21/languages-logic-computation</id>
      <content type="html" xml:base="https://dotkay.github.io/2022/03/21/languages-logic-computation/">&lt;p&gt;A &lt;a href=&quot;https://dotkay.github.io/2022/02/22/languages-culture-communication&quot;&gt;previous post&lt;/a&gt; spoke about state-of-the-art NLP systems that are based on Transformers and some of the challenges around using such systems for translations. Although they could translate almost accurately, they may not match the nuances of spoken (informal) languages. There are other challenges around &lt;em&gt;Question Answering&lt;/em&gt; systems - another tasks such NLP systems are capable of doing. In this post, this is explored futher to see when some computation (as in logical inference rather than mathematical inference) is needed to come up with an answer. We play with &lt;a href=&quot;https://openai.com/&quot;&gt;OpenAI&lt;/a&gt; APIs to see how the state-of-the-art NLP systems excel at language understanding and also where they have gaps to fill.&lt;/p&gt;

&lt;p&gt;English, like many other languages, is a little ambiguous. There are well established rules of English grammar but I believe there are several statements in common parlance that have introduce some ambiguity. While I tried &lt;a href=&quot;https://openai.com/&quot;&gt;OpenAI&lt;/a&gt;, in particular the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-davinci-002&lt;/code&gt; engine on a variety of English statements and the results were astounding, when I kept going on, there were some statements where the answer was not exactly clear.&lt;/p&gt;

&lt;p&gt;One of the was what &lt;em&gt;she&lt;/em&gt; refers to in a statement like &lt;em&gt;Anna hit Clara because she was drunk&lt;/em&gt;. Though it looks ambiguous I believe as &lt;em&gt;Anna&lt;/em&gt; is the subject, the &lt;em&gt;she&lt;/em&gt; in the statement must refer to &lt;em&gt;Anna&lt;/em&gt;. OpenAI does seem to tell me that the &lt;em&gt;she&lt;/em&gt; in the statement refers to &lt;em&gt;Anna&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create(
      engine=&quot;text-davinci-002&quot;,
      prompt=&quot;Anna hit Clara because she was drunk.\n\nQ: Who was drunk?\nA:&quot;,
      top_p=1,
      ...
    )
&amp;gt;&amp;gt;&amp;gt; print(response)
{
  &quot;choices&quot;: [
    {
      ...
      &quot;text&quot;: &quot; Anna was drunk.&quot;
    }
  ],
...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If I rephrase the above statement as &lt;em&gt;Anna hit Clara because she was drunk. Was Clara drunk?&lt;/em&gt;, OpenAI was humble enough to admit that it does not know, which is impressive as there isn’t enough context to infer if &lt;em&gt;Clara&lt;/em&gt; was drunk.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create(
      engine=&quot;text-davinci-002&quot;,
      prompt=&quot;Anna hit Clara because she was drunk.\n\nQ: Was Clara drunk?\nA:&quot;,
      ...
      stop=[&quot;\n&quot;]
    )
&amp;gt;&amp;gt;&amp;gt; print(response)
{
  &quot;choices&quot;: [
    {
      ...
      &quot;text&quot;: &quot; I don't know.&quot;
    }
  ],
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What impressed me the most was the ability to do formulaic calculations and return an answer.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create(
      engine=&quot;text-davinci-002&quot;,
      prompt=&quot;The sale price of a decent house in California is about a million dollars. 20%
      of the price needs to be paid as down payment. In addition, the county levies a 
      property tax of 1.2% on the sale price of the house. John takes a 30 year fixed rate 
      mortgage at 3.5% interest rate.\n\nQ: What would be John's monthly cost of ownership? 
      \nA:&quot;,
      ...
    )
&amp;gt;&amp;gt;&amp;gt; print(response)
{
  &quot;choices&quot;: [
    {
      ... 
      &quot;text&quot;: &quot; John's monthly cost of ownership would be $4,167.&quot;
    }
  ],
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;While the ability to solve when numerical information was provided was too impressive, there was some struggle when the answer involved logical interpretation and numerical computation. For example, the query in the following requires interpreting what “boundary” is and how it contributes to the answer.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create(
      engine=&quot;text-davinci-002&quot;,
      prompt=&quot;Dhoni scored a single off the first ball of the 11th over. Sachin scored two
      consecutive boundaries followed by a single. Dhoni hit the biggest six of the match. 
      He then followed it up with a single and retained strike. \n\nQ: How many runs were 
      scored off the 11th over? \nA:&quot;,
      ...
    )
&amp;gt;&amp;gt;&amp;gt; print(response)
{
  &quot;choices&quot;: [
    {
      ...
      &quot;text&quot;: &quot; 15&quot;
    }
  ],
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Human languages are such that they involve logical interpretation, deduction and computation. It is precisely this challenge that leads to misinterpretation, miscommunication and chaos - you can think of the last time a celebrity or a politican claimed his comments were misinterpreted or taken out of context. However, we as human beings deal with these every day and are attuned to the fallacies and inaccuracies. Our communication system, the one that distinguishes us from many other species, is itself a stochastic one.&lt;/p&gt;

&lt;p&gt;Some statements require logical deduction which is challenging for deep learning systems (that learn from patterns contained in a training corpus). For example,&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create(
      engine=&quot;text-davinci-002&quot;,
      prompt=&quot;marco passed the ball to miel, miel quickly gave it to don who passed it on to
      sky. sky ran with it for a while and gave it to anna.\n\nQ: Does marco have the ball 
      now?\nA:&quot;,
      ...
   )
   &amp;gt;&amp;gt;&amp;gt; print(response)
{
  &quot;choices&quot;: [
    {
      ...
      &quot;text&quot;: &quot; No&quot;
    }
  ],
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;While the system is able to deduce that &lt;em&gt;marco&lt;/em&gt; does not have the ball, a deduction performed to answer &lt;em&gt;who has the ball?&lt;/em&gt; doesn’t seem to work well.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create(
      engine=&quot;text-davinci-002&quot;,
      prompt=&quot;marco passed the ball to miel, miel quickly gave it to don who passed it on to
      sky. sky ran with it for a while and gave it to anna.\n\nQ: Who has the ball now?\nA:&quot;,
      ...
    )
&amp;gt;&amp;gt;&amp;gt; print(response)
{
  &quot;choices&quot;: [
    {
      ...
      &quot;text&quot;: &quot;&quot;
    }
  ],
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is immense research interest in this area and the progress being made is as impressive as that has been achieved so far. Hopefully, in a future post, I will be able to show an NLP system that combines logical reasoning with deep learning and is able to answer much more fancier questions. I am looking forward to it.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="NLP" />
      
        <category term="logic" />
      
        <category term="computation" />
      
        <category term="OpenAI" />
      

      

      
        <summary type="html">A previous post spoke about state-of-the-art NLP systems that are based on Transformers and some of the challenges around using such systems for translations. Although they could translate almost accurately, they may not match the nuances of spoken (informal) languages. There are other challenges around Question Answering systems - another tasks such NLP systems are capable of doing. In this post, this is explored futher to see when some computation (as in logical inference rather than mathematical inference) is needed to come up with an answer. We play with OpenAI APIs to see how the state-of-the-art NLP systems excel at language understanding and also where they have gaps to fill. English, like many other languages, is a little ambiguous. There are well established rules of English grammar but I believe there are several statements in common parlance that have introduce some ambiguity. While I tried OpenAI, in particular the text-davinci-002 engine on a variety of English statements and the results were astounding, when I kept going on, there were some statements where the answer was not exactly clear. One of the was what she refers to in a statement like Anna hit Clara because she was drunk. Though it looks ambiguous I believe as Anna is the subject, the she in the statement must refer to Anna. OpenAI does seem to tell me that the she in the statement refers to Anna. &amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create( engine=&quot;text-davinci-002&quot;, prompt=&quot;Anna hit Clara because she was drunk.\n\nQ: Who was drunk?\nA:&quot;, top_p=1, ... ) &amp;gt;&amp;gt;&amp;gt; print(response) { &quot;choices&quot;: [ { ... &quot;text&quot;: &quot; Anna was drunk.&quot; } ], ... } If I rephrase the above statement as Anna hit Clara because she was drunk. Was Clara drunk?, OpenAI was humble enough to admit that it does not know, which is impressive as there isn’t enough context to infer if Clara was drunk. &amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create( engine=&quot;text-davinci-002&quot;, prompt=&quot;Anna hit Clara because she was drunk.\n\nQ: Was Clara drunk?\nA:&quot;, ... stop=[&quot;\n&quot;] ) &amp;gt;&amp;gt;&amp;gt; print(response) { &quot;choices&quot;: [ { ... &quot;text&quot;: &quot; I don't know.&quot; } ], ... } What impressed me the most was the ability to do formulaic calculations and return an answer. &amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create( engine=&quot;text-davinci-002&quot;, prompt=&quot;The sale price of a decent house in California is about a million dollars. 20% of the price needs to be paid as down payment. In addition, the county levies a property tax of 1.2% on the sale price of the house. John takes a 30 year fixed rate mortgage at 3.5% interest rate.\n\nQ: What would be John's monthly cost of ownership? \nA:&quot;, ... ) &amp;gt;&amp;gt;&amp;gt; print(response) { &quot;choices&quot;: [ { ... &quot;text&quot;: &quot; John's monthly cost of ownership would be $4,167.&quot; } ], ... } While the ability to solve when numerical information was provided was too impressive, there was some struggle when the answer involved logical interpretation and numerical computation. For example, the query in the following requires interpreting what “boundary” is and how it contributes to the answer. &amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create( engine=&quot;text-davinci-002&quot;, prompt=&quot;Dhoni scored a single off the first ball of the 11th over. Sachin scored two consecutive boundaries followed by a single. Dhoni hit the biggest six of the match. He then followed it up with a single and retained strike. \n\nQ: How many runs were scored off the 11th over? \nA:&quot;, ... ) &amp;gt;&amp;gt;&amp;gt; print(response) { &quot;choices&quot;: [ { ... &quot;text&quot;: &quot; 15&quot; } ], ... } Human languages are such that they involve logical interpretation, deduction and computation. It is precisely this challenge that leads to misinterpretation, miscommunication and chaos - you can think of the last time a celebrity or a politican claimed his comments were misinterpreted or taken out of context. However, we as human beings deal with these every day and are attuned to the fallacies and inaccuracies. Our communication system, the one that distinguishes us from many other species, is itself a stochastic one. Some statements require logical deduction which is challenging for deep learning systems (that learn from patterns contained in a training corpus). For example, &amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create( engine=&quot;text-davinci-002&quot;, prompt=&quot;marco passed the ball to miel, miel quickly gave it to don who passed it on to sky. sky ran with it for a while and gave it to anna.\n\nQ: Does marco have the ball now?\nA:&quot;, ... ) &amp;gt;&amp;gt;&amp;gt; print(response) { &quot;choices&quot;: [ { ... &quot;text&quot;: &quot; No&quot; } ], ... } While the system is able to deduce that marco does not have the ball, a deduction performed to answer who has the ball? doesn’t seem to work well. &amp;gt;&amp;gt;&amp;gt; response = openai.Completion.create( engine=&quot;text-davinci-002&quot;, prompt=&quot;marco passed the ball to miel, miel quickly gave it to don who passed it on to sky. sky ran with it for a while and gave it to anna.\n\nQ: Who has the ball now?\nA:&quot;, ... ) &amp;gt;&amp;gt;&amp;gt; print(response) { &quot;choices&quot;: [ { ... &quot;text&quot;: &quot;&quot; } ], ... } There is immense research interest in this area and the progress being made is as impressive as that has been achieved so far. Hopefully, in a future post, I will be able to show an NLP system that combines logical reasoning with deep learning and is able to answer much more fancier questions. I am looking forward to it.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Languages, Culture and Communication →</title>
      
      <link href="https://dotkay.github.io/2022/02/22/languages-culture-communication/" rel="alternate" type="text/html" title="Languages, Culture and Communication" />
      <published>2022-02-22T00:00:00+00:00</published>
      <updated>2022-02-22T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2022/02/22/languages-culture-communication</id>
      <content type="html" xml:base="https://dotkay.github.io/2022/02/22/languages-culture-communication/">&lt;p&gt;Languages have always played a very important role in society and in our cultural evolutions. It has been the vehicle that allowed human beings to collaborate, coexist and achieve great things as well as to deceive, conspire and destroy. Languages have also evolved over time carrying with them many cultural norms, shades of history while also losing some. The same language might sound differently across an ocean or even across geographic land boundaries. Some languages like Sanskrit, though less ambiguous and more efficient, are struggling to survive while others like English are flourishing despite being more ambiguous. In the age of AI based natural language processing (NLP) is it possible to encode some of these norms and cultural connotations in order to make automated translations more close to native spoken languages?&lt;/p&gt;

&lt;p&gt;NLP systems are a commonplace today, mostly in the form of personal assistants like Alexa and chatbots like a customer service system. While they are able to understand and respond to usual queries or translate text to a surprising level of accuracy, they are far from matching human levels of communication. My claim is that NLP research is yet to discover the means to encode the several cultural connotations that come with languages, especially while translating from one to another. While NLP algorithms like LSTM and &lt;a href=&quot;https://en.wikipedia.org/wiki/Transformer_(machine_learning_model)&quot;&gt;Transformers&lt;/a&gt; implicitly encode some of the context needed for better understanding of a statement, a pair of languages might be too different to capture all the context implicitly. Is capturing all of the context necessary? May not be. However, capturing important nuances might be.&lt;/p&gt;

&lt;p&gt;I have been playing around with the &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; API for quite sometime and really enjoying the easeness of use - ability to work with different popular transformer models for different types of NLP tasks. And of course, the ability to use several different famous models makes the result almost unbelievable. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pipeline()&lt;/code&gt; - fundamental component in the &lt;em&gt;Transformers&lt;/em&gt; library serves as a pipeline between the different steps in an NLP pipeline. For example, we may want to connect a preprocessing step to an analysis step and then to a post-processing step. I believe the ease of use and the availability of several models makes Hugging Face the go-to tool for NLP.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;transformers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When instantiating, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pipeline()&lt;/code&gt; expects the user to provide the NLP task we are interested in performing as well as an optional model (when not provided, a default model is used).&lt;/p&gt;

&lt;p&gt;We can create, for example, a sentiment analyzer by providing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sentiment-analysis&lt;/code&gt; as the task. If we do not specify a model to be used, it defaults to Distilbert model.&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sanalyzer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sentiment-analysis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can pass strings that we want to analyze the sentiment for.&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sanalyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I plan to learn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and it returns the sentiment and a score of the sentiment.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [{'label': 'POSITIVE', 'score': 0.9988747239112854}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So “learn” seems to be a positive thing to do. Let’s keep going with this:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sanalyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I plan to learn Spanish&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'POSITIVE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9941837191581726&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, learning Spanish also seems to be a positive thing to do. However,&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sanalyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I plan to learn some more Spanish.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NEGATIVE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9369450807571411&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I am not sure why, but learning some more seems to have a negative connotation (may be “some more” indicates some lacking that one is trying to improve upon?). However, if I add an additional phrase the overall sentiment seems to become positive.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sanalyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I plan to learn some more Spanish. I want to be able to live and work in Spain.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'POSITIVE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9970537424087524&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These are just some of the challenges with current NLP systems. The result could be interpreted in several ways and if the training (of which a model is a result of) was done on specific set of (data from a specific culture or a communication pattern), some phrases might get inferred as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NEGATIVE&lt;/code&gt; though it would not seem negative to the user of such systems. Another example showing a subtle difference:&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sanalyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I plan to learn enough Corporate Finance in order to get a great job&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NEGATIVE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5767139792442322&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;returns a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NEGATIVE&lt;/code&gt; sentiment while&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sanalyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I plan to learn Corporate Finance in order to get a great job&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'POSITIVE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'score'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.902138888835907&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;returns a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POSITIVE&lt;/code&gt; one:&lt;/p&gt;

&lt;p&gt;More intriguing are the expressions that we use depending on cultures and traditions. In many languages, we use different pronouns and verb conjugations depending on if we are talking to elders using a formal language or talking to friends or children (informal language) - like &lt;em&gt;vous&lt;/em&gt; vs &lt;em&gt;tu&lt;/em&gt; in French, &lt;em&gt;aap&lt;/em&gt; vs &lt;em&gt;tum&lt;/em&gt; in Hindi, &lt;em&gt;avar&lt;/em&gt; vs &lt;em&gt;avan&lt;/em&gt; in Tamil, &lt;em&gt;iyaal&lt;/em&gt; vs &lt;em&gt;ival&lt;/em&gt; in Malayalam, etc. Humans have learnt to make that judgement call even when we talk over the phone - we choose formal or informal language depending on how much respect or importance we attach to the person we are talking to, even if it is a stranger and we are speaking to them for the first time. However, NLP systems do not have that context explicitly encoded and it is difficult to implicitly encode them as some languages do not have such differences and while translating from such languages, one would have to possibly over-correct.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;en_fr_translator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;translation_en_to_fr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;en_fr_translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Would you like some coffee?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'translation_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Avez-vous envie de prendre du café ?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we see, we could offer coffee to a close friend (informal language) or we could be a barista offering coffee to a stranger or a customer (using formal language). These are very difficult to encode implicitly. Even when there are some clues in the statement, like the following sentence which talks about &lt;em&gt;balloons&lt;/em&gt; which most likely only children would be interested in, most systems would prefer a formal language in order to be absolutely correct.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;en_fr_translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Do you want a balloon?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'translation_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Voulez-vous un ballon?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are also everyday language (colloquial) that differs from a more grammatically correct business or literary language. At times, the differences between the two is so large that chatbots may sound weird. Let us contrast English-French translation with French-English translation to check this.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;en_fr_translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;There's no one here.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'translation_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Il n'y a personne ici.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In spoken French, &lt;a href=&quot;https://qr.ae/pvKYf3&quot;&gt;one usually leaves out the negation (&lt;em&gt;ne&lt;/em&gt;) in certain cases&lt;/a&gt; and so “&lt;em&gt;Il y a personne ici.&lt;/em&gt;” would also actually mean “&lt;em&gt;There’s no one here.&lt;/em&gt;”&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fr_en_translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Il y a personne ici.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'translation_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;There's no one here.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another example, which might sound very counter-intuitive for people new to the French language.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;en_fr_translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I have&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'translation_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;J'ai&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;en_fr_translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;more bread.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'translation_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'plus de pain.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Such statements are not always compositional.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fr_en_translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;J'ai plus de pain.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'translation_text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;I don't have any more bread.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Many NLP systems are trained on formal and informal phrases and hence would be great translators, they may not always be a great teacher. The fluidity of languages makes languages evolve, creating new words, phrases, letting go some rules of grammar and these are exactly what make languages beatiful and a treasure trove for linguists. These are also the same challenges that make NLP a fascinating subject for Computer Scientists. I am eagerly looking forward to understanding the research in this area hoping that there would be some architecture that would enable us encode some of these connotations implicitly, making NLP systems crawl a little closer towards human-like spoken languages.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="NLP" />
      
        <category term="Languages" />
      
        <category term="Hugging Face" />
      

      

      
        <summary type="html">Languages have always played a very important role in society and in our cultural evolutions. It has been the vehicle that allowed human beings to collaborate, coexist and achieve great things as well as to deceive, conspire and destroy. Languages have also evolved over time carrying with them many cultural norms, shades of history while also losing some. The same language might sound differently across an ocean or even across geographic land boundaries. Some languages like Sanskrit, though less ambiguous and more efficient, are struggling to survive while others like English are flourishing despite being more ambiguous. In the age of AI based natural language processing (NLP) is it possible to encode some of these norms and cultural connotations in order to make automated translations more close to native spoken languages? NLP systems are a commonplace today, mostly in the form of personal assistants like Alexa and chatbots like a customer service system. While they are able to understand and respond to usual queries or translate text to a surprising level of accuracy, they are far from matching human levels of communication. My claim is that NLP research is yet to discover the means to encode the several cultural connotations that come with languages, especially while translating from one to another. While NLP algorithms like LSTM and Transformers implicitly encode some of the context needed for better understanding of a statement, a pair of languages might be too different to capture all the context implicitly. Is capturing all of the context necessary? May not be. However, capturing important nuances might be. I have been playing around with the Hugging Face API for quite sometime and really enjoying the easeness of use - ability to work with different popular transformer models for different types of NLP tasks. And of course, the ability to use several different famous models makes the result almost unbelievable. The pipeline() - fundamental component in the Transformers library serves as a pipeline between the different steps in an NLP pipeline. For example, we may want to connect a preprocessing step to an analysis step and then to a post-processing step. I believe the ease of use and the availability of several models makes Hugging Face the go-to tool for NLP. from transformers import pipeline When instantiating, the pipeline() expects the user to provide the NLP task we are interested in performing as well as an optional model (when not provided, a default model is used). We can create, for example, a sentiment analyzer by providing sentiment-analysis as the task. If we do not specify a model to be used, it defaults to Distilbert model. sanalyzer = pipeline('sentiment-analysis') We can pass strings that we want to analyze the sentiment for. sanalyzer(&quot;I plan to learn&quot;) and it returns the sentiment and a score of the sentiment. &amp;gt; [{'label': 'POSITIVE', 'score': 0.9988747239112854}] So “learn” seems to be a positive thing to do. Let’s keep going with this: sanalyzer(&quot;I plan to learn Spanish&quot;) &amp;gt; [{'label': 'POSITIVE', 'score': 0.9941837191581726}] So, learning Spanish also seems to be a positive thing to do. However, sanalyzer(&quot;I plan to learn some more Spanish.&quot;) &amp;gt; [{'label': 'NEGATIVE', 'score': 0.9369450807571411}] I am not sure why, but learning some more seems to have a negative connotation (may be “some more” indicates some lacking that one is trying to improve upon?). However, if I add an additional phrase the overall sentiment seems to become positive. sanalyzer(&quot;I plan to learn some more Spanish. I want to be able to live and work in Spain.&quot;) &amp;gt; [{'label': 'POSITIVE', 'score': 0.9970537424087524}] These are just some of the challenges with current NLP systems. The result could be interpreted in several ways and if the training (of which a model is a result of) was done on specific set of (data from a specific culture or a communication pattern), some phrases might get inferred as NEGATIVE though it would not seem negative to the user of such systems. Another example showing a subtle difference: sanalyzer(&quot;I plan to learn enough Corporate Finance in order to get a great job&quot;) &amp;gt; [{'label': 'NEGATIVE', 'score': 0.5767139792442322}] returns a NEGATIVE sentiment while sanalyzer(&quot;I plan to learn Corporate Finance in order to get a great job&quot;) &amp;gt; [{'label': 'POSITIVE', 'score': 0.902138888835907}] returns a POSITIVE one: More intriguing are the expressions that we use depending on cultures and traditions. In many languages, we use different pronouns and verb conjugations depending on if we are talking to elders using a formal language or talking to friends or children (informal language) - like vous vs tu in French, aap vs tum in Hindi, avar vs avan in Tamil, iyaal vs ival in Malayalam, etc. Humans have learnt to make that judgement call even when we talk over the phone - we choose formal or informal language depending on how much respect or importance we attach to the person we are talking to, even if it is a stranger and we are speaking to them for the first time. However, NLP systems do not have that context explicitly encoded and it is difficult to implicitly encode them as some languages do not have such differences and while translating from such languages, one would have to possibly over-correct. en_fr_translator = pipeline(&quot;translation_en_to_fr&quot;) en_fr_translator(&quot;Would you like some coffee?&quot;) &amp;gt; [{'translation_text': 'Avez-vous envie de prendre du café ?'}] As we see, we could offer coffee to a close friend (informal language) or we could be a barista offering coffee to a stranger or a customer (using formal language). These are very difficult to encode implicitly. Even when there are some clues in the statement, like the following sentence which talks about balloons which most likely only children would be interested in, most systems would prefer a formal language in order to be absolutely correct. en_fr_translator(&quot;Do you want a balloon?&quot;) &amp;gt; [{'translation_text': 'Voulez-vous un ballon?'}] There are also everyday language (colloquial) that differs from a more grammatically correct business or literary language. At times, the differences between the two is so large that chatbots may sound weird. Let us contrast English-French translation with French-English translation to check this. en_fr_translator(&quot;There's no one here.&quot;) &amp;gt; [{'translation_text': &quot;Il n'y a personne ici.&quot;}] In spoken French, one usually leaves out the negation (ne) in certain cases and so “Il y a personne ici.” would also actually mean “There’s no one here.” fr_en_translator(&quot;Il y a personne ici.&quot;) &amp;gt; [{'translation_text': &quot;There's no one here.&quot;}] Another example, which might sound very counter-intuitive for people new to the French language. en_fr_translator(&quot;I have&quot;) &amp;gt; [{'translation_text': &quot;J'ai&quot;}] en_fr_translator(&quot;more bread.&quot;) &amp;gt; [{'translation_text': 'plus de pain.'}] Such statements are not always compositional. fr_en_translator(&quot;J'ai plus de pain.&quot;) &amp;gt; [{'translation_text': &quot;I don't have any more bread.&quot;}] Many NLP systems are trained on formal and informal phrases and hence would be great translators, they may not always be a great teacher. The fluidity of languages makes languages evolve, creating new words, phrases, letting go some rules of grammar and these are exactly what make languages beatiful and a treasure trove for linguists. These are also the same challenges that make NLP a fascinating subject for Computer Scientists. I am eagerly looking forward to understanding the research in this area hoping that there would be some architecture that would enable us encode some of these connotations implicitly, making NLP systems crawl a little closer towards human-like spoken languages.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">The Year in Formula One →</title>
      
      <link href="https://dotkay.github.io/2021/12/21/year-in-formula-one/" rel="alternate" type="text/html" title="The Year in Formula One" />
      <published>2021-12-21T00:00:00+00:00</published>
      <updated>2021-12-21T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/12/21/year-in-formula-one</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/12/21/year-in-formula-one/">&lt;p&gt;If you are someone who has been watching Formula One over the last decade, it would be safe to bet that you agree 2021 has been one of the exciting year in the sport. Lots of uncertainity, lots of controversies, new, young and energetic racers, and a super-busy calendar with 22 races. In this post, we will look at the last decade in the sport while doing so using Python and Pandas to analyze, plot and visualize the data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;constr_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'driver_standings_2010_2021.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'f1_2010_2021.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we look at the total points by different teams:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;team_totals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constr_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'team'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                           &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                           &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                           &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'team'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;team_totals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/f1_constr_2010_2021.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;Mercedes is clearly the front runner, most of it contributed by Lewis Hamilton as we will see very soon. Having lived in Italy and a Ferrari Fan, it is sad to see Ferrari in second place and even more sad to see the downward trend for the prancing horse.&lt;/p&gt;

&lt;p&gt;Let’s turn to the drivers who play a key role in making the sport what it is. After Mike Schumacher’s retirement, there was some competition between Sebastian Vettel and Lewis Hamilton and to some extent Fernando Alonso and Nico Rosberg. Unfortunately Sebastian Vettel’s dominance faded away and Lewis Hamilton started dominating every race. Very soon there was a new kid in the block - &lt;em&gt;Max Verstappen&lt;/em&gt;. Young, energetic and impatient, Max Verstappen, racing for RedBull, quickly started dominating the sport throwing a big challenge to Lewis Hamilton. Many predicted his dominance given the last couple of years and if there was even the slightest of doubts, the 2021 racing season would have cleared those away. Just before the last race, Lewis Hamilton and Max Verstappen were tied on the same number of points which shows the sheer scale of the competition.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;driver_totals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'full_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'full_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver_totals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/f1_drivers_2010_2021.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;We can also see the maximum points scored by the drivers in any year. This shows Lewis Hamilton dominating the races that were once dominated by Sebastian Vettel.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;max_pt_drivers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                              &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_pt_drivers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;n&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'crest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_pt_drivers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;xy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;xytext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;textcoords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'offset points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;ha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;va&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_xticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_xticklabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fontsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/f1_driver_max_pts_2010_2021.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;We can also see which countries have scored the most points. Traditionally, Formula One has been more popular in Europe than the rest of the world. There are and were South American champions but not many of them. I believe this might be due to the cost involved in the sport and few can afford it. Further most of the best automobile makers are from Europe (and few from Japan as well). We can attempt to draw a tree map using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;squarify&lt;/code&gt; in Python.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;squarify&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;country_wins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;squarify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sizes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;country_wins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
              &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;country_wins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'off'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/f1_country_wins_tree.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;If the tree map makes you think GER (Germany) and GBR (Great Britain) are equal, here is a bar chart showing the actual points.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/f1_country_wins_bar.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;In all, 2021 was a fantastic year for Formula One. I wish the most crucial and deciding race had not ended in a controversial way. Sergio Perez played the best team-mate and tons of thanks to Lewis and Max for the entertainment.&lt;/p&gt;

&lt;p&gt;Looking forward to more competition in 2022.&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 70%&quot;&gt;
&lt;i&gt;The data is from a Kaggle dataset revised with the last race results of 2021, and the plots were done using matplotlib, seaborn.&lt;/i&gt;
&lt;/span&gt;&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="formula one" />
      
        <category term="data science" />
      
        <category term="python" />
      

      

      
        <summary type="html">If you are someone who has been watching Formula One over the last decade, it would be safe to bet that you agree 2021 has been one of the exciting year in the sport. Lots of uncertainity, lots of controversies, new, young and energetic racers, and a super-busy calendar with 22 races. In this post, we will look at the last decade in the sport while doing so using Python and Pandas to analyze, plot and visualize the data. import pandas as pd constr_df = pd.read_csv('driver_standings_2010_2021.csv') driver_df = pd.read_csv('f1_2010_2021.csv') If we look at the total points by different teams: team_totals = pd.DataFrame(constr_df.groupby(['team'])['points'] .sum() .sort_values(ascending=False)) .reset_index() sns.barplot(x='team', y='points', data=team_totals) ... Mercedes is clearly the front runner, most of it contributed by Lewis Hamilton as we will see very soon. Having lived in Italy and a Ferrari Fan, it is sad to see Ferrari in second place and even more sad to see the downward trend for the prancing horse. Let’s turn to the drivers who play a key role in making the sport what it is. After Mike Schumacher’s retirement, there was some competition between Sebastian Vettel and Lewis Hamilton and to some extent Fernando Alonso and Nico Rosberg. Unfortunately Sebastian Vettel’s dominance faded away and Lewis Hamilton started dominating every race. Very soon there was a new kid in the block - Max Verstappen. Young, energetic and impatient, Max Verstappen, racing for RedBull, quickly started dominating the sport throwing a big challenge to Lewis Hamilton. Many predicted his dominance given the last couple of years and if there was even the slightest of doubts, the 2021 racing season would have cleared those away. Just before the last race, Lewis Hamilton and Max Verstappen were tied on the same number of points which shows the sheer scale of the competition. driver_totals = pd.DataFrame(driver_df.groupby(['full_name'])['points'] .sum() .sort_values(ascending=False)) .reset_index() sns.barplot(x='full_name', y='points', data=driver_totals) ... We can also see the maximum points scored by the drivers in any year. This shows Lewis Hamilton dominating the races that were once dominated by Sebastian Vettel. max_pt_drivers = pd.DataFrame(driver_df[driver_df.groupby(['year'])['points'] .transform('max') == driver_df['points']]) ax = sns.barplot(x='year', y='points', data=max_pt_drivers, palette='crest') for p, (i, txt) in zip(ax.patches, enumerate(max_pt_drivers['name'])): ax.annotate(txt, xy=(p.get_x() + p.get_width() / 2, p.get_height()), xytext=(0, 8), textcoords='offset points', ha='center', va='center', size=12 ) ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=14); ... We can also see which countries have scored the most points. Traditionally, Formula One has been more popular in Europe than the rest of the world. There are and were South American champions but not many of them. I believe this might be due to the cost involved in the sport and few can afford it. Further most of the best automobile makers are from Europe (and few from Japan as well). We can attempt to draw a tree map using squarify in Python. import squarify country_wins = pd.DataFrame(driver_df.groupby(['nationality'])['points'] .sum() .sort_values(ascending=False)) .reset_index() squarify.plot(sizes=country_wins['points'][:21], label=country_wins['nationality'][:21], alpha=0.8) plt.axis('off') If the tree map makes you think GER (Germany) and GBR (Great Britain) are equal, here is a bar chart showing the actual points. In all, 2021 was a fantastic year for Formula One. I wish the most crucial and deciding race had not ended in a controversial way. Sergio Perez played the best team-mate and tons of thanks to Lewis and Max for the entertainment. Looking forward to more competition in 2022. The data is from a Kaggle dataset revised with the last race results of 2021, and the plots were done using matplotlib, seaborn.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Opportunities in Metaverse →</title>
      
      <link href="https://dotkay.github.io/2021/11/21/metaverse-opportunities/" rel="alternate" type="text/html" title="Opportunities in Metaverse" />
      <published>2021-11-21T00:00:00+00:00</published>
      <updated>2021-11-21T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/11/21/metaverse-opportunities</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/11/21/metaverse-opportunities/">&lt;p&gt;A &lt;a href=&quot;https://dotkay.github.io/2021/10/01/metaverse-drivers/&quot;&gt;previous post&lt;/a&gt; outlined several drivers of metaverse. While it is still in its nascent stages, metaverse would bring truly immersive environments whose applications would span beyond video games. With the trends in virtual and augmented reality, there are immense economic opportunities as well as implications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gaming:&lt;/strong&gt; The most widely accepted and widely talked about application is, of course, &lt;em&gt;gaming&lt;/em&gt;. Game developers have been creating virtual worlds for decades - so what is different now?. With advances in hardware accleration and Deep Learning algorithms, virtual world experience is becoming more and more realistic than in previous generations of games. For example, techniques like real-time ray tracing were known for a very long time. These are beginning to become practical and a commonplace only recently. So are techniques like super sampling techniques using Deep Learning, as well as other compression techniques that enable creating Bounding Volume Hierarchies (BVH) packing more details about the scene. With Deep Learning techniques playing an increasing important role in simulating physics, more interactive and immersive games can be developed that generate close to accurate physics (flames, movement, flow, etc.) making graphics more realistic. There is enough economic opportunity in gaming and with game streaming it has been growing at an accelerated pace. One can check out the &lt;a href=&quot;https://twitchtracker.com/statistics&quot;&gt;Twitch Streaming Statistics&lt;/a&gt; and get convinced.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advertising:&lt;/strong&gt; If I am watching a live sports event on TV (like soccer) from San Francisco, I would see advertisements pertaining to the local (US) market, while the same game, in an Italian feed, will have advertisements tailored to the European market. This is already a well-known and mature technology called &lt;em&gt;virtual replacement perimeter technology&lt;/em&gt;. &lt;a href=&quot;https://supponor.com/&quot;&gt;&lt;em&gt;Supponor&lt;/em&gt;&lt;/a&gt; is one of the leaders in this space. Metaverse would enable to take this a step further. The commercials would not only get specialized or tailored according to the local market where it is being broadcasted live but also according to each viewer’s personal preferences. Much like how Google’s digital advertising and the growth of mobile and social networks allowed personalized, targeted ads, metaverse would offer such opportunities in a more immersive arena. Technologies pioneered by companies like &lt;a href=&quot;https://www.youtube.com/watch?v=rLnZaItawYg&quot;&gt;Mirriad&lt;/a&gt; for product placement would be extremely valuable and amenable to personalization, not just for live concerts and live sports but many varieties of content created for the metaverse. Of course, there needs to be sufficient guard-rails and transparency and there would also be renewed &lt;a href=&quot;https://www.youtube.com/watch?v=E_F5GxCwizc&quot;&gt;debates on native advertising&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Factory Automation:&lt;/strong&gt; Like gaming, this is one of the other avenues being talked about. There is one major difference between the virtual world (metaverse) created for gaming and the one created for factory automation purposes. For gaming, the artifacts that make up the metaverse is completely upto the imagination of the creator. However, in the case of factory automation, the digital twin has to replicate a physical structure that already exists. Any change in structure or function created (imagine the direction of conveyor belt in an assembly line) in the physical world has to be reflected in the digital twin. There is also less freedom on what artifacts could to be in the digital twin (metaverse). If many factories have identical assembly lines (like many traditional automobile factories or soft-drink bottling units, etc.) one could work with a templated setup. This would involve creating the artifacts common to all these templates (using Graphics SW tools, videos of factory, AI, etc,.). Further even if many factories share common templated factory floors at a high-level, there might be efficiencies that are introduced at the micro level (kinds of robot-arms they use, kinds of automated inspection mechanisms, etc,.) and these would be the key differentiators leading to competitive advantage. There might be commodity goods made by manufacturers who have no apparent competitive advantage over other similar manufacturers (think of zippers, nails, bottle-caps, automotive brakes and lately some semiconductor components, etc,.) for whom creating a digital twin would be easier. But they are also the ones who would move slowly on such innovations as their business becomes more and more commoditized. On the other hand factories who have a great competitive advantage (in terms of operational efficiencies) can leapfrog by having a centralized view of global factories and bringing them all to the same efficient mode.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E-commerce:&lt;/strong&gt; Advances in technologies like photogrammetry and depth-sensing cameras becoming a commonplace in most smartphones can bring about new innovations in e-commerce. Most of e-commerce today is centered around purchase based on reviews from trying the product offline. It becomes interesting when purchases of clothes and accessories are made as one has to trust the size, fit, etc,. Customers tend to purchase multiple sizes only to return some of them back. Though many never realize, the returns in brick-and-mortar stores is around 8-9% while online retailers can see &lt;a href=&quot;https://www.theatlantic.com/magazine/archive/2021/11/free-returns-online-shopping/620169/&quot;&gt;as much as 30% of the products returned&lt;/a&gt;. It runs to &lt;a href=&quot;https://nrf.com/media-center/press-releases/428-billion-merchandise-returned-2020&quot;&gt;billions of dollars worth&lt;/a&gt; of merchandise. &lt;em&gt;Virtual trial rooms&lt;/em&gt; could pop up at many points of interests (shopping malls, cinemas, etc.) or even in your living room (using a VR head-set and a phone camera or a Kinect system) that would allow one to try out new clothes. It could be tied to other marketing avenues (cross-selling) like selecting a design from a fashion show or a TV series and trying them as and when watching those shows.&lt;/p&gt;

&lt;p&gt;High-end fashion is already experimenting with &lt;a href=&quot;https://www.voguebusiness.com/technology/the-augmented-and-virtual-reality-opportunity-for-luxury&quot;&gt;augmented reality&lt;/a&gt;. Who doesn’t want to go watch virtual French Open sitting next to friends from around the world while wearing your favorite Rafa Nike virutal t-shirt having the &lt;em&gt;Raging Bull&lt;/em&gt; logo? Merchandises are already common in many video games and it could seamlessly get into fashion and other virutal events. Given the growth in influencer economy, it would also be an innovative way for amateur fashion designers to showcase their designs and their brand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Healthcare and Bio-informatics:&lt;/strong&gt;
Over the last decade, we have seen increased adoption of robotic surgery - devices like &lt;a href=&quot;https://www.intuitive.com/en-us/products-and-services/da-vinci&quot;&gt;DaVinci systems&lt;/a&gt; have been installed in several hospitals around the globe as it minimizes direct human contact during surgery and reduces infection rates. However, Da Vinci is a robotic arm controlled by a skilled surgeon along with mounted cameras and associated image processing software. With decreasing cost of sensors and advancements in software, a sophisticated array of sensors attached to the robotic arm could provide vital information overlaid (augmented reality) on the camera images of the surgery would provide real-time information that could aid in real-time and critical decision making.  With advancements in 5G and networking bandwidths, Da Vinci like systems could one day make remote surgeries possible. Here’s where metaverse systems could play a huge role. Effectively collaborating with different expert surgeons connected to the robotic arm from different parts of the globe would require the image processing software to be capable of showing different views, different sets of vital information in real-time to different surgical experts and also keep each of the surgeons informed of what the other surgeon is trying to do. This requires a lot of image processing, processing data from different sensors in real-time, syncronizing the views of different surgeons and doing it all in real-time. Technologies such as these would also play a vital role in medical education, to train more professionals in places where such high-end technologies may not be very common.&lt;/p&gt;

&lt;p&gt;MRI is another evolving technology with more and more software components, especially image fusion and augmented reality components, along with advances in physics. There is a &lt;a href=&quot;https://global.canon/en/technology/support28.html&quot;&gt;very nice explanation of MRI in Canon’s webpage&lt;/a&gt;. A keen observer would be able to already notice the various places where imaging technology could be improved many folds using techniques like &lt;a href=&quot;https://www.nvidia.com/en-us/geforce/technologies/dlss/&quot;&gt;DLSS&lt;/a&gt; and the like. Image processing applications in a plethora of fields are getting better using Deep Learning techniques, including such &lt;a href=&quot;https://us.medical.canon/products/magnetic-resonance/aice/&quot;&gt;medical imaging systems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Research in &lt;em&gt;genome sequencing&lt;/em&gt; has advanced leaps and bounds over the last decade. Whole genome sequencing (WGS) analyses developed using systems like Illumina provide a high-resolution base-by-base view of the genome. Softwares like TruSight combine the features used by different experts all in one dashboard and provide several ways of visualization and analysis. Softwares like these are testament to the convergence of hardware, system software, graphics and image processing and collaboration softwares as well as techniques like machine learning, all of which are required for research in areas like bio-informatics. With metaverse like platforms many experts can tap into the same analysis done in one molecular biology lab, and can sort them in different ways depending on the remote biologist’s expertise. While one might be an expert in variant filtering, the other might be an expert in evidence retrieval.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fitness and Active Sports:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Though technologies in fitness got a big boost during the pandemic, mostly due to the interest in exercise equipments like Peloton bikes, sports science has been an active field of research by many global brands like &lt;a href=&quot;https://www.youtube.com/watch?v=paY4xxiQNEU&quot;&gt;Nike&lt;/a&gt;. Companies like Google have already mapped the many streets of the world, with popular places having more detailed maps. It would be great to integrate this information with a AR/VR headset that would allow one to do &lt;a href=&quot;https://www.giroditalia.it/&quot;&gt;&lt;em&gt;Giro d’Italia&lt;/em&gt;&lt;/a&gt; right from one’s living room on a stationary bike. It could even be possible for me to go on a ride with my friends (all of whom are in their stationary bikes probably in their living rooms or patios in different parts of the world), while turning around to talk to them or turning back to check on a slower rider. These require enormous graphics processing power (enabled by GPUs) combined with image processing software (enabled by AI) and a high bandwidth internet connectivity (enabled by 5G). For sports physicians, trainers and training apps this would also enable to monitor their customer’s vital information in real-time as and when they are working out and provide corrective information and guidance.&lt;/p&gt;

&lt;p&gt;There are several business opportunities in the metaverse and several more would emerge. There are several challenges, especially around security of such systems. The success would however down to the right business model as well as focussed, deliberate execution. We might still see several companies getting on the metaverse bandwagon as did several newspaper companies thought internet was just about creating a website without understanding the distribution and personalization powers of the internet. There would be several “me-too” businesses trying to ride the “metaverse hype” without a sustainable business model, while a few who are deliberate would turn out to be the Amazons and Googles of the next decade.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="metaverse" />
      

      

      
        <summary type="html">A previous post outlined several drivers of metaverse. While it is still in its nascent stages, metaverse would bring truly immersive environments whose applications would span beyond video games. With the trends in virtual and augmented reality, there are immense economic opportunities as well as implications. Gaming: The most widely accepted and widely talked about application is, of course, gaming. Game developers have been creating virtual worlds for decades - so what is different now?. With advances in hardware accleration and Deep Learning algorithms, virtual world experience is becoming more and more realistic than in previous generations of games. For example, techniques like real-time ray tracing were known for a very long time. These are beginning to become practical and a commonplace only recently. So are techniques like super sampling techniques using Deep Learning, as well as other compression techniques that enable creating Bounding Volume Hierarchies (BVH) packing more details about the scene. With Deep Learning techniques playing an increasing important role in simulating physics, more interactive and immersive games can be developed that generate close to accurate physics (flames, movement, flow, etc.) making graphics more realistic. There is enough economic opportunity in gaming and with game streaming it has been growing at an accelerated pace. One can check out the Twitch Streaming Statistics and get convinced. Advertising: If I am watching a live sports event on TV (like soccer) from San Francisco, I would see advertisements pertaining to the local (US) market, while the same game, in an Italian feed, will have advertisements tailored to the European market. This is already a well-known and mature technology called virtual replacement perimeter technology. Supponor is one of the leaders in this space. Metaverse would enable to take this a step further. The commercials would not only get specialized or tailored according to the local market where it is being broadcasted live but also according to each viewer’s personal preferences. Much like how Google’s digital advertising and the growth of mobile and social networks allowed personalized, targeted ads, metaverse would offer such opportunities in a more immersive arena. Technologies pioneered by companies like Mirriad for product placement would be extremely valuable and amenable to personalization, not just for live concerts and live sports but many varieties of content created for the metaverse. Of course, there needs to be sufficient guard-rails and transparency and there would also be renewed debates on native advertising. Factory Automation: Like gaming, this is one of the other avenues being talked about. There is one major difference between the virtual world (metaverse) created for gaming and the one created for factory automation purposes. For gaming, the artifacts that make up the metaverse is completely upto the imagination of the creator. However, in the case of factory automation, the digital twin has to replicate a physical structure that already exists. Any change in structure or function created (imagine the direction of conveyor belt in an assembly line) in the physical world has to be reflected in the digital twin. There is also less freedom on what artifacts could to be in the digital twin (metaverse). If many factories have identical assembly lines (like many traditional automobile factories or soft-drink bottling units, etc.) one could work with a templated setup. This would involve creating the artifacts common to all these templates (using Graphics SW tools, videos of factory, AI, etc,.). Further even if many factories share common templated factory floors at a high-level, there might be efficiencies that are introduced at the micro level (kinds of robot-arms they use, kinds of automated inspection mechanisms, etc,.) and these would be the key differentiators leading to competitive advantage. There might be commodity goods made by manufacturers who have no apparent competitive advantage over other similar manufacturers (think of zippers, nails, bottle-caps, automotive brakes and lately some semiconductor components, etc,.) for whom creating a digital twin would be easier. But they are also the ones who would move slowly on such innovations as their business becomes more and more commoditized. On the other hand factories who have a great competitive advantage (in terms of operational efficiencies) can leapfrog by having a centralized view of global factories and bringing them all to the same efficient mode. E-commerce: Advances in technologies like photogrammetry and depth-sensing cameras becoming a commonplace in most smartphones can bring about new innovations in e-commerce. Most of e-commerce today is centered around purchase based on reviews from trying the product offline. It becomes interesting when purchases of clothes and accessories are made as one has to trust the size, fit, etc,. Customers tend to purchase multiple sizes only to return some of them back. Though many never realize, the returns in brick-and-mortar stores is around 8-9% while online retailers can see as much as 30% of the products returned. It runs to billions of dollars worth of merchandise. Virtual trial rooms could pop up at many points of interests (shopping malls, cinemas, etc.) or even in your living room (using a VR head-set and a phone camera or a Kinect system) that would allow one to try out new clothes. It could be tied to other marketing avenues (cross-selling) like selecting a design from a fashion show or a TV series and trying them as and when watching those shows. High-end fashion is already experimenting with augmented reality. Who doesn’t want to go watch virtual French Open sitting next to friends from around the world while wearing your favorite Rafa Nike virutal t-shirt having the Raging Bull logo? Merchandises are already common in many video games and it could seamlessly get into fashion and other virutal events. Given the growth in influencer economy, it would also be an innovative way for amateur fashion designers to showcase their designs and their brand. Healthcare and Bio-informatics: Over the last decade, we have seen increased adoption of robotic surgery - devices like DaVinci systems have been installed in several hospitals around the globe as it minimizes direct human contact during surgery and reduces infection rates. However, Da Vinci is a robotic arm controlled by a skilled surgeon along with mounted cameras and associated image processing software. With decreasing cost of sensors and advancements in software, a sophisticated array of sensors attached to the robotic arm could provide vital information overlaid (augmented reality) on the camera images of the surgery would provide real-time information that could aid in real-time and critical decision making. With advancements in 5G and networking bandwidths, Da Vinci like systems could one day make remote surgeries possible. Here’s where metaverse systems could play a huge role. Effectively collaborating with different expert surgeons connected to the robotic arm from different parts of the globe would require the image processing software to be capable of showing different views, different sets of vital information in real-time to different surgical experts and also keep each of the surgeons informed of what the other surgeon is trying to do. This requires a lot of image processing, processing data from different sensors in real-time, syncronizing the views of different surgeons and doing it all in real-time. Technologies such as these would also play a vital role in medical education, to train more professionals in places where such high-end technologies may not be very common. MRI is another evolving technology with more and more software components, especially image fusion and augmented reality components, along with advances in physics. There is a very nice explanation of MRI in Canon’s webpage. A keen observer would be able to already notice the various places where imaging technology could be improved many folds using techniques like DLSS and the like. Image processing applications in a plethora of fields are getting better using Deep Learning techniques, including such medical imaging systems. Research in genome sequencing has advanced leaps and bounds over the last decade. Whole genome sequencing (WGS) analyses developed using systems like Illumina provide a high-resolution base-by-base view of the genome. Softwares like TruSight combine the features used by different experts all in one dashboard and provide several ways of visualization and analysis. Softwares like these are testament to the convergence of hardware, system software, graphics and image processing and collaboration softwares as well as techniques like machine learning, all of which are required for research in areas like bio-informatics. With metaverse like platforms many experts can tap into the same analysis done in one molecular biology lab, and can sort them in different ways depending on the remote biologist’s expertise. While one might be an expert in variant filtering, the other might be an expert in evidence retrieval. Fitness and Active Sports: Though technologies in fitness got a big boost during the pandemic, mostly due to the interest in exercise equipments like Peloton bikes, sports science has been an active field of research by many global brands like Nike. Companies like Google have already mapped the many streets of the world, with popular places having more detailed maps. It would be great to integrate this information with a AR/VR headset that would allow one to do Giro d’Italia right from one’s living room on a stationary bike. It could even be possible for me to go on a ride with my friends (all of whom are in their stationary bikes probably in their living rooms or patios in different parts of the world), while turning around to talk to them or turning back to check on a slower rider. These require enormous graphics processing power (enabled by GPUs) combined with image processing software (enabled by AI) and a high bandwidth internet connectivity (enabled by 5G). For sports physicians, trainers and training apps this would also enable to monitor their customer’s vital information in real-time as and when they are working out and provide corrective information and guidance. There are several business opportunities in the metaverse and several more would emerge. There are several challenges, especially around security of such systems. The success would however down to the right business model as well as focussed, deliberate execution. We might still see several companies getting on the metaverse bandwagon as did several newspaper companies thought internet was just about creating a website without understanding the distribution and personalization powers of the internet. There would be several “me-too” businesses trying to ride the “metaverse hype” without a sustainable business model, while a few who are deliberate would turn out to be the Amazons and Googles of the next decade.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Metaverse and its Drivers →</title>
      
      <link href="https://dotkay.github.io/2021/10/01/metaverse-drivers/" rel="alternate" type="text/html" title="Metaverse and its Drivers" />
      <published>2021-10-01T00:00:00+00:00</published>
      <updated>2021-10-01T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/10/01/metaverse-drivers</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/10/01/metaverse-drivers/">&lt;p&gt;Lately, we have been hearing a lot about the &lt;em&gt;metaverse&lt;/em&gt;. Although this concept is not new, it has been brought to the limelight because of the huge bets and brand name changes from the potential big players in this space. However, the metaverse that is talked about today is different from what the current state of the internet offers and there are some key technological developments that are drivers of the metaverse and different companies are equipped with different strengths in order to join the competition.&lt;/p&gt;

&lt;p&gt;Avatars and game environments have been around for quite some time, especially in immersive video games. The metaverse is much more than avatars or fancy immersive experiences as in video games. It is a platform, rather than a stand-alone application. It is a platform where several applications can be plugged in and get the benefits of the platform. This might be one of the probable reasons a social media messaging company recently rebranded itself. The new brand could mean a platform much bigger than social media, where social media would be just one of the components that could be plugged in. The metaverse combines AR (Augmented Reality) with communication and collaboration tools and in some cases with the help of VR (Virtual Reality) that results in an immersive, photorealistic communication, collaboration and entertainment experience. Many technological developments that happened over the course of the last decade are key to the big bets on the possibilities of metaverse.&lt;/p&gt;

&lt;p&gt;The main technological advancements could be grouped under the following categories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Graphics Hardware (Semiconductors)&lt;/strong&gt;
Computer processors have not just packed more and more transistors but the capabilities of graphics hardware have grown by leaps and bounds the last decade. The semiconductor process technology, new memory technologies, new functions and features driven by deep learning applications, real-time ray tracing, etc. have enabled a new era of computation possibilities at scale that until recently required expensive servers running over long periods of time in order to achieve the same computation. A big part of this is driven by semiconductor process technology (32nm in 2009 to 5nm in 2020) that enabled packing several transistors in a small area (of the die). Similar advances in memory technologies (3D stacked DRAM, advances in DDR as well as HBM and other new memory technologies) helped in increasing the on board storage by a large factor, as required by heavy graphics applications. Similar advances have also resulted in packing enough computation in small form factors like mobile phones, security cameras and other IoT devices. It has resulted in our ability to play games with a reasonably good graphics on our mobile phones. It has also enabled IoT devices to perform data analytics real time as and when they collect sensory data on the field.&lt;/p&gt;

&lt;div class=&quot;img_container&quot;&gt;
  &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/NgcYLIvlp_k&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Graphics Software (VR, AR, Photogrammetry, etc.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If hardware was all that was needed, it would have been a commodity. The software layer brings in the innovation that software companies constantly compete to better each other at. For example, irrespective of intel or M1 processor the software layer should ensure that the applications work seamlessly across hardware configurations and operating systems. The more tied the hardware is to the software layer, more performance can be squeezed out of the hardware. Many of the graphics applications need a tremendous amount of compute power. This is especially true for photorealistic graphics. Even given the advances in semiconductors, especially graphics processing units, graphics software innovations require a mix of technology, science and art. While most software companies excel at technology, few excel in combining the three. Graphics components are relatively easy to create, but rendering photo-realistic graphics in real time in different form factors is not straight forward. Advances in AI techniques like Deep Learning Super Sampling (&lt;a href=&quot;https://developer.nvidia.com/dlss&quot;&gt;DLSS&lt;/a&gt;) and post-processing techniques like Temporal Anti-Aliasing (&lt;a href=&quot;https://www.nvidia.com/es-la/drivers/txaa-anti-aliasing-technology/&quot;&gt;TAA&lt;/a&gt;) techniques have helped tremendously. Techniques like &lt;a href=&quot;https://en.wikipedia.org/wiki/Photogrammetry&quot;&gt;photogrammetry&lt;/a&gt; play a vital role in creating digital twins of artifacts, besides 3D cameras and effective and scalable stitching algorithms. AR also involves merging the physical world (camera sensed) augmented with layers of graphics content. Since motion of objects is the undoubted constant in all VR and AR experiences (as anyone who has watched YouTube 360 videos or played with an Oculus headset can attest), simulating physics is the next challenge to overcome. Simulating physics, beyond fire, waves and wind in Computer Graphics is a non-trivial task that requires &lt;a href=&quot;https://www.youtube.com/watch?v=d8yzFfSrDAg&quot;&gt;simulating different materials&lt;/a&gt; like stones, marbles, snow, etc., besides their interactions with light rays (reflection, refraction, etc.) and rendering caustics. Although today’s graphics is a major leap from a decade ago, metaverse would demand a much higher quality of photorealistic real-time graphics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Internet, 5G and streaming games&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Metaverse has the potential to change collaboration and media consumption in ways internet changed marketing and commerce. The advances in the same technologies (web2.0, fiber optics, mobile internet, 3G, 4G) that propelled internet adoption would also catalyze technologies like metaverse. Over the last few decades, internet has completely transformed how we consume media content (streaming media, social media, etc. compared to print and television) and how we collaborate (Webex, Zoom, Google Docs, etc. compared to telephone calls and fax messages) increasing both efficiency and effectiveness. The internet infrastructure already being able to stream online games and movies and constantly improving bandwidth and connectivity, companies can safely bet on further improvements that would support applications in the metaverse. New and upcoming technologies like 5G would bring bandwidth intensive applications like gaming within reach for mobile consumers. As adoption increases there would be new opportunities for businesses with new and innovative business models emerging out of it, much in the same way internet created a wide array of marketplace business models (Amazon, Uber, Doordash, etc.). Many doubted &lt;a href=&quot;https://www.youtube.com/watch?v=GltlJO56S1g&quot;&gt;Amazon’s&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/watch?v=gipL_CEw-fk&quot;&gt;Microsoft’s&lt;/a&gt; potential at the beginning of the internet era. The companies that do not see the potential of the metaverse might get left behind when the potentials are realized by the leaders.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Social Networks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The current decade has seen an interesting growth in content creation. The growth of social media enabled everyone to interact and showcase their talent. Specifically, apps like Facebook, Twitter and TikTok made it possible for independent content creators and small businesses to reach and market their products and services effectively in a cost-efficient manner. Gaming is inherently a social activity. The more immersive or innovative games are, the more attention they get (e.g. &lt;a href=&quot;https://www.inc.com/josh-linkner/the-disruptive-innovation-behind-pok-mon-go.html&quot;&gt;Pokemon Go&lt;/a&gt;). When we think about it, there are many activities like movies, theatre, live sports, education, etc. that are also social activities, or at least the experience is enriched a lot when done as a social activity. Metaverse could offer these activities in the virtual world - for example, right from your living room in Singapore, you could watch US open, sitting in front-row seats at Arthur Ashe stadium, wearing your VR headset sitting next your close friend who is wearing another VR headset and is sitting in his living room in Sydney. Though we might be inclined to think that popular social media players would have an advantage in metaverse, we could also see new innovative players who could change the game. The bottom line is that for many of these social activities, metaverse would offer a much richer experience than what the current internet offers.&lt;/p&gt;

&lt;p&gt;There are many other drivers that might directly or indirectly influence the adoption like enterprise communication and collaboration applications like WebEx or Zoom extended to factory floors rather than just computer screens, virtual tourism and adventure trips, etc. It is difficult to predict if metaverse would succeed but it is definitely going to bring lots of innovations in immersive graphics, simulation as well as hardware architectures.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="metaverse" />
      
        <category term="graphics" />
      
        <category term="semiconductors" />
      
        <category term="software" />
      

      

      
        <summary type="html">Lately, we have been hearing a lot about the metaverse. Although this concept is not new, it has been brought to the limelight because of the huge bets and brand name changes from the potential big players in this space. However, the metaverse that is talked about today is different from what the current state of the internet offers and there are some key technological developments that are drivers of the metaverse and different companies are equipped with different strengths in order to join the competition. Avatars and game environments have been around for quite some time, especially in immersive video games. The metaverse is much more than avatars or fancy immersive experiences as in video games. It is a platform, rather than a stand-alone application. It is a platform where several applications can be plugged in and get the benefits of the platform. This might be one of the probable reasons a social media messaging company recently rebranded itself. The new brand could mean a platform much bigger than social media, where social media would be just one of the components that could be plugged in. The metaverse combines AR (Augmented Reality) with communication and collaboration tools and in some cases with the help of VR (Virtual Reality) that results in an immersive, photorealistic communication, collaboration and entertainment experience. Many technological developments that happened over the course of the last decade are key to the big bets on the possibilities of metaverse. The main technological advancements could be grouped under the following categories. Graphics Hardware (Semiconductors) Computer processors have not just packed more and more transistors but the capabilities of graphics hardware have grown by leaps and bounds the last decade. The semiconductor process technology, new memory technologies, new functions and features driven by deep learning applications, real-time ray tracing, etc. have enabled a new era of computation possibilities at scale that until recently required expensive servers running over long periods of time in order to achieve the same computation. A big part of this is driven by semiconductor process technology (32nm in 2009 to 5nm in 2020) that enabled packing several transistors in a small area (of the die). Similar advances in memory technologies (3D stacked DRAM, advances in DDR as well as HBM and other new memory technologies) helped in increasing the on board storage by a large factor, as required by heavy graphics applications. Similar advances have also resulted in packing enough computation in small form factors like mobile phones, security cameras and other IoT devices. It has resulted in our ability to play games with a reasonably good graphics on our mobile phones. It has also enabled IoT devices to perform data analytics real time as and when they collect sensory data on the field. Graphics Software (VR, AR, Photogrammetry, etc.) If hardware was all that was needed, it would have been a commodity. The software layer brings in the innovation that software companies constantly compete to better each other at. For example, irrespective of intel or M1 processor the software layer should ensure that the applications work seamlessly across hardware configurations and operating systems. The more tied the hardware is to the software layer, more performance can be squeezed out of the hardware. Many of the graphics applications need a tremendous amount of compute power. This is especially true for photorealistic graphics. Even given the advances in semiconductors, especially graphics processing units, graphics software innovations require a mix of technology, science and art. While most software companies excel at technology, few excel in combining the three. Graphics components are relatively easy to create, but rendering photo-realistic graphics in real time in different form factors is not straight forward. Advances in AI techniques like Deep Learning Super Sampling (DLSS) and post-processing techniques like Temporal Anti-Aliasing (TAA) techniques have helped tremendously. Techniques like photogrammetry play a vital role in creating digital twins of artifacts, besides 3D cameras and effective and scalable stitching algorithms. AR also involves merging the physical world (camera sensed) augmented with layers of graphics content. Since motion of objects is the undoubted constant in all VR and AR experiences (as anyone who has watched YouTube 360 videos or played with an Oculus headset can attest), simulating physics is the next challenge to overcome. Simulating physics, beyond fire, waves and wind in Computer Graphics is a non-trivial task that requires simulating different materials like stones, marbles, snow, etc., besides their interactions with light rays (reflection, refraction, etc.) and rendering caustics. Although today’s graphics is a major leap from a decade ago, metaverse would demand a much higher quality of photorealistic real-time graphics. Internet, 5G and streaming games Metaverse has the potential to change collaboration and media consumption in ways internet changed marketing and commerce. The advances in the same technologies (web2.0, fiber optics, mobile internet, 3G, 4G) that propelled internet adoption would also catalyze technologies like metaverse. Over the last few decades, internet has completely transformed how we consume media content (streaming media, social media, etc. compared to print and television) and how we collaborate (Webex, Zoom, Google Docs, etc. compared to telephone calls and fax messages) increasing both efficiency and effectiveness. The internet infrastructure already being able to stream online games and movies and constantly improving bandwidth and connectivity, companies can safely bet on further improvements that would support applications in the metaverse. New and upcoming technologies like 5G would bring bandwidth intensive applications like gaming within reach for mobile consumers. As adoption increases there would be new opportunities for businesses with new and innovative business models emerging out of it, much in the same way internet created a wide array of marketplace business models (Amazon, Uber, Doordash, etc.). Many doubted Amazon’s and Microsoft’s potential at the beginning of the internet era. The companies that do not see the potential of the metaverse might get left behind when the potentials are realized by the leaders. Social Networks The current decade has seen an interesting growth in content creation. The growth of social media enabled everyone to interact and showcase their talent. Specifically, apps like Facebook, Twitter and TikTok made it possible for independent content creators and small businesses to reach and market their products and services effectively in a cost-efficient manner. Gaming is inherently a social activity. The more immersive or innovative games are, the more attention they get (e.g. Pokemon Go). When we think about it, there are many activities like movies, theatre, live sports, education, etc. that are also social activities, or at least the experience is enriched a lot when done as a social activity. Metaverse could offer these activities in the virtual world - for example, right from your living room in Singapore, you could watch US open, sitting in front-row seats at Arthur Ashe stadium, wearing your VR headset sitting next your close friend who is wearing another VR headset and is sitting in his living room in Sydney. Though we might be inclined to think that popular social media players would have an advantage in metaverse, we could also see new innovative players who could change the game. The bottom line is that for many of these social activities, metaverse would offer a much richer experience than what the current internet offers. There are many other drivers that might directly or indirectly influence the adoption like enterprise communication and collaboration applications like WebEx or Zoom extended to factory floors rather than just computer screens, virtual tourism and adventure trips, etc. It is difficult to predict if metaverse would succeed but it is definitely going to bring lots of innovations in immersive graphics, simulation as well as hardware architectures.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Stories in Charts →</title>
      
      <link href="https://dotkay.github.io/2021/09/22/stories-in-charts/" rel="alternate" type="text/html" title="Stories in Charts" />
      <published>2021-09-22T00:00:00+00:00</published>
      <updated>2021-09-22T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/09/22/stories-in-charts</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/09/22/stories-in-charts/">&lt;p&gt;In this post, we will see the most ubiquitous, most useful and also the most easily mis-interpreted data visualization tools - &lt;em&gt;charts&lt;/em&gt;. They come in various forms and they are used to represent different aspects of the underlying data. The key assumption is that the visual representation is easier to interpret quickly than in a tabular format. More often, one kind of story a chart conveys might hide another kind of story a different chart, of the underlying dataset, might have conveyed. It is not uncommon to find that the reader would interpret the chart in a way different from what the writer wanted to convey, in which case it is best for the writer to clarify the message being driven.&lt;/p&gt;

&lt;p&gt;For example, let us look at the latest global vaccination data. When you look at the per-capita vaccination rates of different countries, and say you pick the top 50 countries, you would see a chart similar to the following (the chart below is from September, 2021). More specifically, the chart shows the number of fully vaccinated people per hundred of the population.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/people_vax_per_100.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;What story does this tell? While per-capita numbers are a way to normalize the data, it crucially depends on the story that one wants to tell. Does this indicate the ease of availability of vaccines? Does it indicate the effectiveness of the healthcare system? Does this indicate the willingness of people to get the vaccine? Or something else?&lt;/p&gt;

&lt;p&gt;Let us look at the absolute numbers for the same data and look at the chart.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/people_vax.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span style=&quot;color:gray; font-size: 50%; text-align: left;&quot;&gt;
Data regarding fully vaccinated population from China was missing from the dataset and hence it does not show up in the chart. China had the most fully vaccinated population (absolute numbers) in September, 2021.
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;We see a different picture. What story does this tell?&lt;/p&gt;

&lt;p&gt;While both of the above charts convey useful information, it is necessary to understand what useful story could be told using the above. For example, the first chart (per-capita) could indicate what percentage of the total population is vaccinated. This could indicate to what extent the spread of the virus or hospitalizations could be contained and that very likely these countries could get out of the pandemic sooner and become safer to travel to. It does not indicate the effectiveness of the healthcare system or the challenges in getting more people vaccinated, etc.&lt;/p&gt;

&lt;p&gt;The second chart shows the absolute number of people vaccinated in many countries. The difference between the two charts could show the challenges in getting the population vaccinated - it could be geographical as in some countries might be too large posing a logistics challenge, it could be the size of the population - even if enough vaccines are in supply more would be needed to get the entire population vaccinated or it could be a short supply of vaccines - again because of lack of storage or the price or a weak healthcare infrastructure.&lt;/p&gt;

&lt;p&gt;On similar lines, when you look at GDP data and plot the top 50 countries by GDP the chart looks something like the following.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/gdp_2018_top_50.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;color:gray; font-size: 50%; text-align: left;&quot;&gt;
The GDP numbers are from 2018 rather than latest numbers in order to avoid the variations of the effects of the pandemic on GDP.
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;It shows the wealthiest countries (in terms of GDP). But does the wealth trickle down to every individual? Again, there might be challenges like population, management of funds, etc. Once you look at per-capita numbers one could see how different countries fare.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/gdp_per_capita_2018_top_50.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;When you look at the GDP growth rate, it tells a different story - the countries that are improving from their past year. Yes, Libya did have 15% GDP growth in 2018.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/gdp_growth_rate_2018.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;The chart we choose should depend on the story we want to tell. It is imperative to explicitly explain the choice of chart and how it tells the story the writer wants to tell and also the stories it does not.&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:gray; font-size: 70%; text-align: left;&quot;&gt;
The vaccination data used here is from a &lt;a href=&quot;https://www.kaggle.com/gpreda/covid-world-vaccination-progress&quot; target=&quot;_self&quot;&gt;Kaggle dataset&lt;/a&gt;.
&lt;/span&gt;&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="vaccination" />
      
        <category term="gdp" />
      
        <category term="per-capita" />
      
        <category term="charts" />
      
        <category term="data science" />
      

      

      
        <summary type="html">In this post, we will see the most ubiquitous, most useful and also the most easily mis-interpreted data visualization tools - charts. They come in various forms and they are used to represent different aspects of the underlying data. The key assumption is that the visual representation is easier to interpret quickly than in a tabular format. More often, one kind of story a chart conveys might hide another kind of story a different chart, of the underlying dataset, might have conveyed. It is not uncommon to find that the reader would interpret the chart in a way different from what the writer wanted to convey, in which case it is best for the writer to clarify the message being driven. For example, let us look at the latest global vaccination data. When you look at the per-capita vaccination rates of different countries, and say you pick the top 50 countries, you would see a chart similar to the following (the chart below is from September, 2021). More specifically, the chart shows the number of fully vaccinated people per hundred of the population. What story does this tell? While per-capita numbers are a way to normalize the data, it crucially depends on the story that one wants to tell. Does this indicate the ease of availability of vaccines? Does it indicate the effectiveness of the healthcare system? Does this indicate the willingness of people to get the vaccine? Or something else? Let us look at the absolute numbers for the same data and look at the chart. Data regarding fully vaccinated population from China was missing from the dataset and hence it does not show up in the chart. China had the most fully vaccinated population (absolute numbers) in September, 2021. We see a different picture. What story does this tell? While both of the above charts convey useful information, it is necessary to understand what useful story could be told using the above. For example, the first chart (per-capita) could indicate what percentage of the total population is vaccinated. This could indicate to what extent the spread of the virus or hospitalizations could be contained and that very likely these countries could get out of the pandemic sooner and become safer to travel to. It does not indicate the effectiveness of the healthcare system or the challenges in getting more people vaccinated, etc. The second chart shows the absolute number of people vaccinated in many countries. The difference between the two charts could show the challenges in getting the population vaccinated - it could be geographical as in some countries might be too large posing a logistics challenge, it could be the size of the population - even if enough vaccines are in supply more would be needed to get the entire population vaccinated or it could be a short supply of vaccines - again because of lack of storage or the price or a weak healthcare infrastructure. On similar lines, when you look at GDP data and plot the top 50 countries by GDP the chart looks something like the following. The GDP numbers are from 2018 rather than latest numbers in order to avoid the variations of the effects of the pandemic on GDP. It shows the wealthiest countries (in terms of GDP). But does the wealth trickle down to every individual? Again, there might be challenges like population, management of funds, etc. Once you look at per-capita numbers one could see how different countries fare. When you look at the GDP growth rate, it tells a different story - the countries that are improving from their past year. Yes, Libya did have 15% GDP growth in 2018. The chart we choose should depend on the story we want to tell. It is imperative to explicitly explain the choice of chart and how it tells the story the writer wants to tell and also the stories it does not. The vaccination data used here is from a Kaggle dataset.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">The Stories of Summer Olympics →</title>
      
      <link href="https://dotkay.github.io/2021/08/16/stories-of-summer-olympics/" rel="alternate" type="text/html" title="The Stories of Summer Olympics" />
      <published>2021-08-16T00:00:00+00:00</published>
      <updated>2021-08-16T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/08/16/stories-of-summer-olympics</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/08/16/stories-of-summer-olympics/">&lt;p&gt;This is about the stories of Summer Olympics - not just one story but many stories and not just the recently concluded Tokyo Olympics, but all of the Olympic games since the first one in Athens in 1896. Although the analysis of the medals won by different countries would make the story read like a story medals and achievements statistics, there are other stories hidden within. We will narrate many of those as we do the analysis.&lt;/p&gt;

&lt;p&gt;We will use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pandas&lt;/code&gt; library to do the data analysis and plotly to create our plots that would tell a visual story.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.express&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we look at the hosts we see many western powers with Brazil and China (then emerging economies) hosting in 2008 and 2016 respectively. Of course, hosting an Olympics is no small thing - the infrastructure, safety, accessibility, etc. play a huge role and many of these cost money. London seems to be the only city that has hosted Olympics thrice.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;total_medals_by_host_city&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summer_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'City'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_medals_by_host_city&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'City'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hover_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medals Awarded at Each Venue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'London'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1690&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;London has hosted Olympics thrice...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The number of events in each of the Olympics also seems to be different, as evidenced by the total number of medals awarded during the games. With Paris and London regularly competing for the best European City regularly I believe it is high time Paris got a chance to host the Summer Olympic games, and very glad 2024 Olympics are going to be held in Paris. I also hope more and more emerging economies to be able to host the games. The motivation and interest in sports such events would infuse is invaluable.&lt;/p&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;no&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/17.embed&quot; height=&quot;525&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;When we look at the cumulative number of medals won from the start of Summer Olympic games, USA clearly leads. But more important to note here is Russia which was more excellent in sports, science and technology, arts and culture, etc., when it was Soviet Union. Also interesting to note is the presence of an entry &lt;em&gt;Individual athletes&lt;/em&gt; - athletes who chose to compete under the Olympic flag instead of any specific country. This is a political story.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;total_medals_by_country&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summer_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_medals_by_country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hover_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Cumulative Number of Medals Won (1896-2021)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There were many instances where athletes who requested to compete independently and were refused - for example, the ones who emigrated from Communist Europe during the cold war, as well as some during the &lt;a href=&quot;https://en.wikipedia.org/wiki/1976_Olympic_boycott&quot;&gt;1976 Olympic boycott&lt;/a&gt;. The first provisions were made by IOC (International Olympic Committee) during the 1980 Summer Olympics hosted at Moscow.&lt;/p&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;no&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; align=&quot;middle&quot; src=&quot;https://plotly.com/~kkplot/15.embed&quot; height=&quot;600&quot; width=&quot;1000&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;When we look at the countries that shine on the top of the medals table regularly the familiar pattern is clear. It is mostly European countries, USA, Australia and more recently China. Although we might have cheered Usain Bolt’s sprints and track and field athletics being one of the most anticipated events of the Summer Olympic games, in terms of total number of medals, many western countries top the table year after year. This also indicates the broad variety and the number of events in the summer games.&lt;/p&gt;

&lt;p&gt;There is also a political story hidden here, that of the 1980 Summer Olympics. There were only two cities that bid to host the games - Los Angeles and Moscow and eventually Moscow won. If you notice the 1980 Olympics that was hosted by Moscow, Russia seems to be the clear leader in terms of number of medals. Almost always, one expects host country to win several medals, but scoring more medals than the usual competitive powers is always a big achievement. Many nations boycotted the 1980 Olympics, led by the USA to protest against the Soviet-Afghan war. It had the smallest participation - just around 80 countries.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;top_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Country&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Medal Count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sum&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Medal Count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summer_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Medal Count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Country&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; 
             &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal Count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hover_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Medal Count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Medal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;barmode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'stack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;color_continuous_scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Viridis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medal Winners in Olympics'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;iframe id=&quot;igraph&quot; scrolling=&quot;no&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/19.embed&quot; height=&quot;800&quot; width=&quot;1000&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;There are more politics stories in Olympics. The apparent gaps in the plot below makes one wonder what happened those years. The 1916 summer Olympics, to be hosted by Berlin, were cancelled due to World War I, a first cancellation in the 20 year history of Olympics during those days. The 1940 Olympics to be hosted by Tokyo were rescheduled to be hosted by Finland (due to Japan’s invasion of China in 1937) and eventually cancelled due to the outbreak of World War II. Again, the 1944 Summer Olympics to be hosted by London got cancelled due to World War II. The 2020 Olympics hosted by Tokyo was rescheduled to 2021 due to the outbreak of Covid. It took tremendous courage and organization by Japan and the participating countries to put up a great show during the pandemic.&lt;/p&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;no&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/21.embed&quot; height=&quot;800&quot; width=&quot;1000&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_final&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idcols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idcols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Cumulative Total Medals'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                         &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfnoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'NOC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, to finish it off, let us see how the top 25 medal winners (measured as per medals won in 2020)
have fared over the years in terms of total medals won. The rise of China as a major sporting nation is very apparent.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df_final&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_final&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Country&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Country&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cumulative Total Medals&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cumulative Total Medals&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;color_discrete_sequence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;brown&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gold&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;silver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Medal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animation_frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Year&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hover_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Country&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The Olympics Story&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;iframe id=&quot;igraph&quot; scrolling=&quot;no&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/24.embed&quot; height=&quot;800&quot; width=&quot;1100&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;While this short post tells several stories behind the Summer Olympics, I would like to write a future post on the stories behind Paralympics which will would be stories of courge, inspiration and extraordinary commitment.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:gray; font-size: 70%; text-align: left;&quot;&gt;
The data used here is from a &lt;a href=&quot;https://www.kaggle.com/amirba/olympic-sports-and-medals-18962021&quot; target=&quot;_self&quot;&gt;Kaggle dataset&lt;/a&gt;. This &lt;a href=&quot;https://www.kaggle.com/heesoo37/120-years-of-olympic-history-athletes-and-results&quot; target=&quot;_self&quot;&gt;Kaggle dataset&lt;/a&gt; was also used to get NOC (National Olympic Committee) codes of the different countries. Some of the numbers in the dataset does not seem to agree with tables in Wikipedia, nevertheless the differences are not huge to change the story.
&lt;/span&gt;&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="Olympics" />
      
        <category term="medals" />
      
        <category term="data science" />
      

      

      
        <summary type="html">This is about the stories of Summer Olympics - not just one story but many stories and not just the recently concluded Tokyo Olympics, but all of the Olympic games since the first one in Athens in 1896. Although the analysis of the medals won by different countries would make the story read like a story medals and achievements statistics, there are other stories hidden within. We will narrate many of those as we do the analysis. We will use pandas library to do the data analysis and plotly to create our plots that would tell a visual story. import pandas as pd import plotly.express as px When we look at the hosts we see many western powers with Brazil and China (then emerging economies) hosting in 2008 and 2016 respectively. Of course, hosting an Olympics is no small thing - the infrastructure, safety, accessibility, etc. play a huge role and many of these cost money. London seems to be the only city that has hosted Olympics thrice. total_medals_by_host_city = summer_df.groupby(['City', 'Year'], as_index=False)['Medal'].count() fig = px.bar(total_medals_by_host_city, x='City', y='Medal', hover_data = ['Medal', 'Year'], color='Medal', title='Medals Awarded at Each Venue') fig.add_annotation(x='London', y=1690, text=&quot;London has hosted Olympics thrice...&quot;, ... ... opacity=1.0 ) The number of events in each of the Olympics also seems to be different, as evidenced by the total number of medals awarded during the games. With Paris and London regularly competing for the best European City regularly I believe it is high time Paris got a chance to host the Summer Olympic games, and very glad 2024 Olympics are going to be held in Paris. I also hope more and more emerging economies to be able to host the games. The motivation and interest in sports such events would infuse is invaluable. When we look at the cumulative number of medals won from the start of Summer Olympic games, USA clearly leads. But more important to note here is Russia which was more excellent in sports, science and technology, arts and culture, etc., when it was Soviet Union. Also interesting to note is the presence of an entry Individual athletes - athletes who chose to compete under the Olympic flag instead of any specific country. This is a political story. total_medals_by_country = summer_df.groupby('Country', as_index=False)['Medal'].count() fig = px.bar(total_medals_by_country, x='Country', y='Medal', hover_data = ['Medal'], color='Medal', title='Cumulative Number of Medals Won (1896-2021)') There were many instances where athletes who requested to compete independently and were refused - for example, the ones who emigrated from Communist Europe during the cold war, as well as some during the 1976 Olympic boycott. The first provisions were made by IOC (International Olympic Committee) during the 1980 Summer Olympics hosted at Moscow. When we look at the countries that shine on the top of the medals table regularly the familiar pattern is clear. It is mostly European countries, USA, Australia and more recently China. Although we might have cheered Usain Bolt’s sprints and track and field athletics being one of the most anticipated events of the Summer Olympic games, in terms of total number of medals, many western countries top the table year after year. This also indicates the broad variety and the number of events in the summer games. There is also a political story hidden here, that of the 1980 Summer Olympics. There were only two cities that bid to host the games - Los Angeles and Moscow and eventually Moscow won. If you notice the 1980 Olympics that was hosted by Moscow, Russia seems to be the clear leader in terms of number of medals. Almost always, one expects host country to win several medals, but scoring more medals than the usual competitive powers is always a big achievement. Many nations boycotted the 1980 Olympics, led by the USA to protest against the Soviet-Afghan war. It had the smallest participation - just around 80 countries. def top_n(n): return ( df .groupby(&quot;Country&quot;) .agg({&quot;Medal Count&quot;: &quot;sum&quot;}) .sort_values(&quot;Medal Count&quot;, ascending=False) .head(n) ) df = summer_df.groupby(['Year', 'Country', 'Medal']).size().reset_index() df.columns = ['Year', 'Country', 'Medal', 'Medal Count'] fig = px.bar(df.loc[df[&quot;Country&quot;].isin(top_n(10).index)], x='Year', y='Medal Count', hover_data = ['Country', 'Medal Count', 'Medal'], color='Country', barmode='stack', color_continuous_scale=px.colors.sequential.Viridis, title='Medal Winners in Olympics') There are more politics stories in Olympics. The apparent gaps in the plot below makes one wonder what happened those years. The 1916 summer Olympics, to be hosted by Berlin, were cancelled due to World War I, a first cancellation in the 20 year history of Olympics during those days. The 1940 Olympics to be hosted by Tokyo were rescheduled to be hosted by Finland (due to Japan’s invasion of China in 1937) and eventually cancelled due to the outbreak of World War II. Again, the 1944 Summer Olympics to be hosted by London got cancelled due to World War II. The 2020 Olympics hosted by Tokyo was rescheduled to 2021 due to the outbreak of Covid. It took tremendous courage and organization by Japan and the participating countries to put up a great show during the pandemic. df_final = (df).fillna(0).sort_values(idcols) .groupby(idcols[1:]) .cumsum() .rename(columns={0: 'Cumulative Total Medals'}) .reset_index() .merge(dfnoc, on='NOC') Now, to finish it off, let us see how the top 25 medal winners (measured as per medals won in 2020) have fared over the years in terms of total medals won. The rise of China as a major sporting nation is very apparent. fig = px.scatter( df_final.loc[df_final[&quot;Country&quot;].isin(top_n(25).index)], x=&quot;Country&quot;, y=&quot;Cumulative Total Medals&quot;, log_y=True, size=&quot;Cumulative Total Medals&quot;, color_discrete_sequence=[&quot;brown&quot;,&quot;gold&quot;,&quot;silver&quot;], color=&quot;Medal&quot;, animation_frame=&quot;Year&quot;, hover_name=&quot;Country&quot;, title=&quot;The Olympics Story&quot;, ) While this short post tells several stories behind the Summer Olympics, I would like to write a future post on the stories behind Paralympics which will would be stories of courge, inspiration and extraordinary commitment. The data used here is from a Kaggle dataset. This Kaggle dataset was also used to get NOC (National Olympic Committee) codes of the different countries. Some of the numbers in the dataset does not seem to agree with tables in Wikipedia, nevertheless the differences are not huge to change the story.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">More Software and Silicon than Steel →</title>
      
      <link href="https://dotkay.github.io/2021/07/07/software-silicon-steel/" rel="alternate" type="text/html" title="More Software and Silicon than Steel" />
      <published>2021-07-07T00:00:00+00:00</published>
      <updated>2021-07-07T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/07/07/software-silicon-steel</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/07/07/software-silicon-steel/">&lt;p&gt;Automakers are in the news lately, not for the the usual reasons like launching fully electric models of their vehicles, or factory closures or emission scandals. They are in the news because of semiconductor shortage, throwing many into a state of shock. For people following the auto industry this is only as common as &lt;a href=&quot;https://www.techradar.com/news/chip-maker-for-apple-qualcomm-amd-warns-chip-shortage-to-last-through-2022&quot;&gt;Apple, Qualcomm or AMD’s woes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The rise of the ECUs&lt;/strong&gt;
For more than a decade now, there has been more and more software and silicon that go into automobiles than steel. A typical automobile has about a couple of hundred Electronic Control Units (ECUs) which are microcontrollers each receiving inputs from different (like tire pressure, oil, seat belt, engine temperature, etc.) and producing outputs that translate to action (like a dashboard indicator light on low tire pressure, etc.). Since the cost of sensors have been going down rapidly, more and more of them are added in today’s vehicles and hence more ECUs to process them. The software that goes along is also tightly coupled with the hardware and these ECUs are bought from different OEMs. Much like a computer architecture, most of the automakers connect these ECUs through a common bus usually over a Controller Area Network &lt;a href=&quot;https://www.engineersgarage.com/can-protocol-understanding-the-controller-area-network-protocol/&quot;&gt;(CAN)&lt;/a&gt;. The number of ECUs have only been increasing with the number of features. Rain sensors, daylight sensors, blind-spot sensors, parking sensors are all commonplace in today’s vehicles.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/tmp/main/misc/auto_ecus.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;color:gray; font-size: 60%;&quot;&gt;
Source: How Computer Science Helps Car Technology - Bruce Yellin
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;From ECUs to DCUs&lt;/strong&gt;
ECUs constitute a &lt;em&gt;decentralized&lt;/em&gt; architecture - each ECU controls a particular function. With the increasing number of ECUs controlling critical functions like ADAS (Advanced Driver Assist Systems), autonomous driving, radars, etc., the industry has been moving to an architecture called DCU (Domain Control Unit) wherein instead of hundreds of ECUs a few DCUs would control multiple functions. This has been enabled by advances in semiconductors (performance and power) over the years and the decreasing cost of sensors. In a sense, DCUs constitute a &lt;em&gt;centralized&lt;/em&gt; architecture. Much like how a PC Operating System can make way for high priority tasks, the software enabling the DCUs could prioritize critical functions. Further, this also enables flexibility and extensibility. The hardware (sensors and processing power) would remain in the vehicle and new software when installed would provide a new feature, much like how you have a CPU and memory (hardware) in your laptop and you can install Microsoft Office (software) if and when needed. From CAN, the automobiles are trying to move on to ethernet based architecture for many of the functionalities because of the faster transmission speed and more data per frame. CAN provides predictable and collision-free network access between nodes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Into the Future&lt;/strong&gt;
With advanced sensors (like cameras and lidar) providing streaming, high resolution data, the processing power of the hardware needs to be beefed up in order to process them in real-time. This has enabled the makers of high performance processors to enter the market to compete with the many ECU vendors. NVIDIA and Intel are two of the major processor makers that are making their presence felt in the automotive space, besides Qualcomm and others. With hardware being the muscle, more and more value would be added by innovation in software (the mind). For example, a camera might just send frames of a snowy scene which software could then process, along with some real-time data it receives from neibouring vehicles or cellular phone towers, etc. and create an actionable insight for the actuators. Software can use the historical data from the vehicle for diagnosis and more importantly prognosis of faults. With the decreasing cost of sensors the data collected will explode in volume over time and the automotive software stack might also include a cloud component to store data for continuous processing.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As the importance of electronics and software has grown, so has complexity. Take the exploding number of software lines of code (SLOC) contained in modern cars as an example. In 2010, some vehicles had about ten million SLOC; by 2016, this expanded by a factor of 15, to roughly 150 million lines. Snowballing complexity is causing significant software-related quality issues, as evidenced by millions of recent vehicle recalls - &lt;a href=&quot;https://www.mckinsey.com/industries/automotive-and-assembly/our-insights/rethinking-car-software-and-electronics-architecture&quot;&gt;McKinsey &amp;amp; Co.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With most vehicles made of steel and aluminium the value differentiator was brought about by the (electronic) features over the past decade. The next decade would usher in a new era of value differentiation enabled by software innovations. Who would own the hardware and operating system (much like Windows and Intel or Android and ARM in PC and mobile generation) of the era of automobile innovation is yet to be seen.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We really designed the Model S to be a very sophisticated computer on wheels 
– Elon Musk, 2015&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      

      
        <category term="automotive" />
      
        <category term="semiconductors" />
      
        <category term="software" />
      
        <category term="IoT" />
      

      

      
        <summary type="html">Automakers are in the news lately, not for the the usual reasons like launching fully electric models of their vehicles, or factory closures or emission scandals. They are in the news because of semiconductor shortage, throwing many into a state of shock. For people following the auto industry this is only as common as Apple, Qualcomm or AMD’s woes. The rise of the ECUs For more than a decade now, there has been more and more software and silicon that go into automobiles than steel. A typical automobile has about a couple of hundred Electronic Control Units (ECUs) which are microcontrollers each receiving inputs from different (like tire pressure, oil, seat belt, engine temperature, etc.) and producing outputs that translate to action (like a dashboard indicator light on low tire pressure, etc.). Since the cost of sensors have been going down rapidly, more and more of them are added in today’s vehicles and hence more ECUs to process them. The software that goes along is also tightly coupled with the hardware and these ECUs are bought from different OEMs. Much like a computer architecture, most of the automakers connect these ECUs through a common bus usually over a Controller Area Network (CAN). The number of ECUs have only been increasing with the number of features. Rain sensors, daylight sensors, blind-spot sensors, parking sensors are all commonplace in today’s vehicles. Source: How Computer Science Helps Car Technology - Bruce Yellin From ECUs to DCUs ECUs constitute a decentralized architecture - each ECU controls a particular function. With the increasing number of ECUs controlling critical functions like ADAS (Advanced Driver Assist Systems), autonomous driving, radars, etc., the industry has been moving to an architecture called DCU (Domain Control Unit) wherein instead of hundreds of ECUs a few DCUs would control multiple functions. This has been enabled by advances in semiconductors (performance and power) over the years and the decreasing cost of sensors. In a sense, DCUs constitute a centralized architecture. Much like how a PC Operating System can make way for high priority tasks, the software enabling the DCUs could prioritize critical functions. Further, this also enables flexibility and extensibility. The hardware (sensors and processing power) would remain in the vehicle and new software when installed would provide a new feature, much like how you have a CPU and memory (hardware) in your laptop and you can install Microsoft Office (software) if and when needed. From CAN, the automobiles are trying to move on to ethernet based architecture for many of the functionalities because of the faster transmission speed and more data per frame. CAN provides predictable and collision-free network access between nodes. Into the Future With advanced sensors (like cameras and lidar) providing streaming, high resolution data, the processing power of the hardware needs to be beefed up in order to process them in real-time. This has enabled the makers of high performance processors to enter the market to compete with the many ECU vendors. NVIDIA and Intel are two of the major processor makers that are making their presence felt in the automotive space, besides Qualcomm and others. With hardware being the muscle, more and more value would be added by innovation in software (the mind). For example, a camera might just send frames of a snowy scene which software could then process, along with some real-time data it receives from neibouring vehicles or cellular phone towers, etc. and create an actionable insight for the actuators. Software can use the historical data from the vehicle for diagnosis and more importantly prognosis of faults. With the decreasing cost of sensors the data collected will explode in volume over time and the automotive software stack might also include a cloud component to store data for continuous processing. As the importance of electronics and software has grown, so has complexity. Take the exploding number of software lines of code (SLOC) contained in modern cars as an example. In 2010, some vehicles had about ten million SLOC; by 2016, this expanded by a factor of 15, to roughly 150 million lines. Snowballing complexity is causing significant software-related quality issues, as evidenced by millions of recent vehicle recalls - McKinsey &amp;amp; Co. With most vehicles made of steel and aluminium the value differentiator was brought about by the (electronic) features over the past decade. The next decade would usher in a new era of value differentiation enabled by software innovations. Who would own the hardware and operating system (much like Windows and Intel or Android and ARM in PC and mobile generation) of the era of automobile innovation is yet to be seen. We really designed the Model S to be a very sophisticated computer on wheels – Elon Musk, 2015</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">What have people been watching on YouTube? →</title>
      
      <link href="https://dotkay.github.io/2021/06/06/us-youtube-views/" rel="alternate" type="text/html" title="What have people been watching on YouTube?" />
      <published>2021-06-06T00:00:00+00:00</published>
      <updated>2021-06-06T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/06/06/us-youtube-views</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/06/06/us-youtube-views/">&lt;p&gt;For more than 15 months people around the world are mostly staying indoors, those who could are working from home, vacations and other outdoor entertainments have come to a standstill. At the same time, NetFlix, gaming, and other entertainment like TV and &lt;a href=&quot;https://www.youtube.com/&quot;&gt;YouTube&lt;/a&gt; must have become more popular - after all, these are the forms of indoor entertainment. I decided to look at what people have been interested within this limited set of entertainment avenues. While I could not find most data, YouTube data was available and regularly updated. I decided to download the dataset that contains YouTube data from August 2020 until early June 2021. Let us see what people (in the U.S.) have been watching on YouTube during this period.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'US_youtube_trending_data.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yt_categories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'US_category_id.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtypes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The different features in the dataset are (after casting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publishedAt&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;trending_date&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;datetime&lt;/code&gt; type):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;video_id                          object
title                             object
publishedAt          datetime64[ns, UTC]
channelId                         object
channelTitle                      object
categoryId                        object
trending_date        datetime64[ns, UTC]
tags                              object
view_count                         int64
likes                              int64
dislikes                           int64
comment_count                      int64
thumbnail_link                    object
comments_disabled                   bool
ratings_disabled                    bool
description                       object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are different categories of videos in the dataset, and these are the number of videos in each category.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/n_cat_videos.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;I am surpised by the number of videos in some of the categories or the categorization itself. There is a category on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;People &amp;amp; Blogs&lt;/code&gt; - I am not sure what it refers to. I do know artists have their own channels and YouTube is a more lively form of a blog, but there is also Music (some of the channels there might also be by music artists). While I try and understand how the different videos are categorized, let us look at some other stats.&lt;/p&gt;

&lt;p&gt;Let us find out how many aggregate views each of the different categories has:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cat_view_count_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'categoryId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat_view_count_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'categoryId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Set2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat_view_count_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/nviews_cat_videos.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;Not surprisingly, Music, Entertainment and Gaming are right at the top. Unfortunately, Education category is way behind. I find YouTube as a wonderful source of education. But may be this is due to Coursera, Udacity, etc. having their own video encoders and decoders and do not have their content on YouTube.&lt;/p&gt;

&lt;p&gt;Let us see which were the Top 50 most viewed videos during the time period, in the U.S.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# create a new column 'count_max_view' to collect max view_count
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'count_max_view'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'video_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# sort the column so that we can pick out the top 50
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top50&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'count_max_view'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'count_max_view'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
                                                                          &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# remove non alpha-numeric characters from the titles
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[^a-zA-Z0-9]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And let us plot the dataset to see which ones are on the top:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'muted'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;aspect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/top50_yt_videos.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;Since I am fond of Education, I would like to see which YouTube channels have maxinum number of views and check if any of my favourite channels appear in the list.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;yt_edu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yt_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'categoryId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Education'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yt_edu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yt_edu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'channelTitle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yt_edu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'channelTitle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Set2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yt_edu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'view_count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channelTitle&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/yt_edu_views.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;I see a lot of interesting channels - Khan Academy seems to have just made it to the list. I also see a channel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YouTube&lt;/code&gt;. I see lots of interesting channel names and I hope to spend more time exploring those on YouTube very soon.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.kaggle.com/rsrishav/youtube-trending-video-dataset&quot;&gt;YouTube dataset&lt;/a&gt; is also available for other geographies. Someday, I would like to compare how the interests in different geographies differ by comparing YouTube channels’ popularity. It may not be an accurate representation of interests at all, but it should be a fun exercise.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="US" />
      
        <category term="YouTube" />
      
        <category term="Education" />
      
        <category term="Pandemic" />
      

      

      
        <summary type="html">For more than 15 months people around the world are mostly staying indoors, those who could are working from home, vacations and other outdoor entertainments have come to a standstill. At the same time, NetFlix, gaming, and other entertainment like TV and YouTube must have become more popular - after all, these are the forms of indoor entertainment. I decided to look at what people have been interested within this limited set of entertainment avenues. While I could not find most data, YouTube data was available and regularly updated. I decided to download the dataset that contains YouTube data from August 2020 until early June 2021. Let us see what people (in the U.S.) have been watching on YouTube during this period. yt_us = pd.read_csv('US_youtube_trending_data.csv') yt_categories = pd.read_json('US_category_id.json') yt_us.dtypes The different features in the dataset are (after casting publishedAt and trending_date to datetime type): video_id object title object publishedAt datetime64[ns, UTC] channelId object channelTitle object categoryId object trending_date datetime64[ns, UTC] tags object view_count int64 likes int64 dislikes int64 comment_count int64 thumbnail_link object comments_disabled bool ratings_disabled bool description object There are different categories of videos in the dataset, and these are the number of videos in each category. I am surpised by the number of videos in some of the categories or the categorization itself. There is a category on People &amp;amp; Blogs - I am not sure what it refers to. I do know artists have their own channels and YouTube is a more lively form of a blog, but there is also Music (some of the channels there might also be by music artists). While I try and understand how the different videos are categorized, let us look at some other stats. Let us find out how many aggregate views each of the different categories has: cat_view_count_df = yt_us.groupby(['categoryId'])['view_count'].agg(['sum']) chart = sns.barplot( data=cat_view_count_df, x='categoryId', y='view_count', palette='Set2', order=cat_view_count_df.sort_values('view_count', ascending=False).category ) Not surprisingly, Music, Entertainment and Gaming are right at the top. Unfortunately, Education category is way behind. I find YouTube as a wonderful source of education. But may be this is due to Coursera, Udacity, etc. having their own video encoders and decoders and do not have their content on YouTube. Let us see which were the Top 50 most viewed videos during the time period, in the U.S. # create a new column 'count_max_view' to collect max view_count yt_us['count_max_view'] = yt_us.groupby(['video_id'])['view_count'].transform(max) # sort the column so that we can pick out the top 50 top50 = yt_us[yt_us['view_count'] == yt_us['count_max_view']].sort_values(by=['count_max_view'], ascending=False).head(50) # remove non alpha-numeric characters from the titles top50.title = top50.title.str.replace('[^a-zA-Z0-9]', '') And let us plot the dataset to see which ones are on the top: fig = sns.catplot( data=top50, x='title', y='view_count', kind='bar', palette='muted', aspect=2, legend=False ) Since I am fond of Education, I would like to see which YouTube channels have maxinum number of views and check if any of my favourite channels appear in the list. yt_edu = yt_us[yt_us['categoryId'] == 'Education'] yt_edu = yt_edu.groupby(['channelTitle'])['view_count'].agg(['sum']) chart = sns.barplot( data=yt_edu, x='channelTitle', y='view_count', palette='Set2', order=yt_edu.sort_values('view_count', ascending=False).channelTitle ) I see a lot of interesting channels - Khan Academy seems to have just made it to the list. I also see a channel YouTube. I see lots of interesting channel names and I hope to spend more time exploring those on YouTube very soon. The YouTube dataset is also available for other geographies. Someday, I would like to compare how the interests in different geographies differ by comparing YouTube channels’ popularity. It may not be an accurate representation of interests at all, but it should be a fun exercise.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">U.S. - Job Losses and Recovery →</title>
      
      <link href="https://dotkay.github.io/2021/03/15/us-job-loss-and-recovery/" rel="alternate" type="text/html" title="U.S. - Job Losses and Recovery" />
      <published>2021-03-15T00:00:00+00:00</published>
      <updated>2021-03-15T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/03/15/us-job-loss-and-recovery</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/03/15/us-job-loss-and-recovery/">&lt;p&gt;In a &lt;a href=&quot;https://dotkay.github.io/2021/02/21/us-unemployment&quot;&gt;previous post&lt;/a&gt;, we saw how many jobs the different states in the U.S. have lost over the years primarily due to trade deficits. In this post, we will visually analyze the &lt;a href=&quot;https://www.bls.gov/charts/employment-situation/employment-levels-by-industry.htm&quot;&gt;data from BLS&lt;/a&gt; and compare the effects of 2008 recession and the ongoing pandemic on the state of employment in the U.S. across different sectors.&lt;/p&gt;

&lt;p&gt;The covid-19 pandemic has definitely wrecked the employment across several sectors of the labor economy and not just the hospitality sector. If we look at the employment numbers for an year starting from January 2020, job losses are evident. We also see the quick recovery (though not to January-2020 levels) in several of the sectors.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;job_cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Manufacturing Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Hospitality Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Wholesale Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'Retail Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Transportation Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Construction Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'Education Health Services Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Finance Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Information Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'Mining Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Other Services Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Professional Services Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'Utilities Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;area&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pandemic_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Month&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;job_cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
              &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'simple_white'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;yes&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/10.embed&quot; height=&quot;700&quot; width=&quot;980&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;If we zoom out in the data set and look at two decades of employment numbers all the way from January 2001 until January 2021, we also see the effect of 2008 recession on employment numbers. We also see how gradual and prolonged the effect of 2008 recession was. The job losses across sectors during the pandemic was sudden and steep and the recovery of numbers was also quick.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;area&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Month&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;job_cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'simple_white'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;yes&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/12.embed&quot; height=&quot;700&quot; width=&quot;980&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;We can just hope that the recovery from the pandemic continues quicker and reaches early 2020 levels, not only in the U.S. but across the globe. Given that the world is very globalized today than ever before, anyone is healthy and good only when everyone is healthy and good.&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 70%&quot;&gt;
&lt;i&gt;The tabular BLS data was parsed using BeautifulSoup, and the plots were done using plotly and chart_studio.&lt;/i&gt;
&lt;/span&gt;&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="US" />
      
        <category term="labor market" />
      
        <category term="economy" />
      
        <category term="pandemic" />
      

      

      
        <summary type="html">In a previous post, we saw how many jobs the different states in the U.S. have lost over the years primarily due to trade deficits. In this post, we will visually analyze the data from BLS and compare the effects of 2008 recession and the ongoing pandemic on the state of employment in the U.S. across different sectors. The covid-19 pandemic has definitely wrecked the employment across several sectors of the labor economy and not just the hospitality sector. If we look at the employment numbers for an year starting from January 2020, job losses are evident. We also see the quick recovery (though not to January-2020 levels) in several of the sectors. job_cols = ['Manufacturing Jobs', 'Hospitality Jobs', 'Wholesale Jobs', 'Retail Jobs', 'Transportation Jobs', 'Construction Jobs', 'Education Health Services Jobs', 'Finance Jobs', 'Information Jobs', 'Mining Jobs', 'Other Services Jobs', 'Professional Services Jobs', 'Utilities Jobs'] fig = px.area(pandemic_df, x=&quot;Month&quot;, y=job_cols, template='simple_white') fig.add_annotation(...) ... fig.show() If we zoom out in the data set and look at two decades of employment numbers all the way from January 2001 until January 2021, we also see the effect of 2008 recession on employment numbers. We also see how gradual and prolonged the effect of 2008 recession was. The job losses across sectors during the pandemic was sudden and steep and the recovery of numbers was also quick. fig = px.area(emp_df, x=&quot;Month&quot;, y=job_cols, template='simple_white') fig.add_annotation(...) ... fig.show() We can just hope that the recovery from the pandemic continues quicker and reaches early 2020 levels, not only in the U.S. but across the globe. Given that the world is very globalized today than ever before, anyone is healthy and good only when everyone is healthy and good. The tabular BLS data was parsed using BeautifulSoup, and the plots were done using plotly and chart_studio.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Jobs, Offshoring and Unemployment - US →</title>
      
      <link href="https://dotkay.github.io/2021/02/21/us-unemployment/" rel="alternate" type="text/html" title="Jobs, Offshoring and Unemployment - US" />
      <published>2021-02-21T00:00:00+00:00</published>
      <updated>2021-02-21T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/02/21/us-unemployment</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/02/21/us-unemployment/">&lt;p&gt;With 2020 being one of the worst in recent history, for many reasons fuelled by the pandemic. With many countries being unprepared to handle a pandemic of this size, it also exposed the global supply chain being &lt;a href=&quot;https://dotkay.github.io/2020/04/01/efficiency-vs-flexibility&quot;&gt;highly optimized rather than flexible&lt;/a&gt;. It also exposed the inequality in society - healthcare, job security, income, etc. Many countries had to start manufacturing personal protective equipments (PPE), ventilators, etc. by themselves to serve the local needs rather than rely on the supply chain that got stalled. A couple of decades ago, many of these equipments were manufactured locally but over time, many of those got offshored.&lt;/p&gt;

&lt;p&gt;However, this post is not about unemployment due to the pandemic. It is more about loss of U.S. jobs over the period 2001-2017, mostly due to trade deficits, with data from &lt;a href=&quot;https://www.epi.org/publication/the-china-toll-deepens-growth-in-the-bilateral-trade-deficit-between-2001-and-2017-cost-3-4-million-u-s-jobs-with-losses-in-every-state-and-congressional-district/&quot;&gt;this report&lt;/a&gt; and manufacturing data from &lt;a href=&quot;https://www.bls.gov/charts/employment-situation/employment-levels-by-industry.htm&quot;&gt;BLS data&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first decade of the century was the worst for U.S. manufacturing jobs. It saw the steepest decline in such jobs, in a very long time. There are two conflicting theories around this - one argues the loss is due to increased automation, while the other attributes the loss to offshoring of such jobs. I could not find the data on rate of automation or increase in manufacturing jobs in other geographies during the time period in order to analyze it analytically. However the loss of jobs, whatever being the root cause, is itself staggering.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.express&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Manufacturing Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Manufacturing Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Manufacturing Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Manufacturing Jobs (in thousands)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'simple_white'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;autosize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;700&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;yes&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/6.embed&quot; height=&quot;700&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Apparently, about four decades ago the Bay Area in California was full of orange orchards, and a couple of decades later they all became startups working in electronics and software (Silicon Valley). They were not startups making apps that let teenagers poke and swipe at each other but advanced electronics and software that goes along with it, like routers, modems, semiconductor chips, etc. There were supposedly many small enterprises manufacturing circuit boards and assembling systems for these famous companies.&lt;/p&gt;

&lt;p&gt;An old video of Macintosh Factory in Fremont:
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Dk306ZkNOuc&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;But does it mean only the electronics jobs got offshored? Not really. If we look at the data deeper and look at the number of jobs lost state-wise, it gives a more detailed picture. Almost every major state in the U.S. has lost thousands of jobs from 2001-2017, with most of the loss happening between 2001-2009. Many other states would have seen loss of jobs in other industries like automobiles and steel included.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'State'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Jobs Lost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'% Jobs Lost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Jobs Lost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Jobs Lost (in thousands)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;yes&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/1.embed&quot; height=&quot;600&quot; width=&quot;980&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;If we look even deeper into the data, we can see how many jobs were lost in each state’s congressional districts.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total Jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'State'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'% Jobs Lost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'State'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'States and Congressional Districts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;hover_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Congressional District'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe id=&quot;igraph&quot; scrolling=&quot;yes&quot; style=&quot;border:none;&quot; seamless=&quot;seamless&quot; src=&quot;https://plotly.com/~kkplot/4.embed&quot; height=&quot;870&quot; width=&quot;100%&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;When I find reliable data on rate of automation and manufacturing jobs gained in other geographies, analysis of that data would help in putting the pieces together. While I am not against offshoring, I am all for a more flexible supply chain, rather than a super-optimized supply chain that would get disrupted affecting the lives and livelihoods of several people, as we witnessed last year when medical devices and PPE supply chain got disrupted.&lt;/p&gt;

&lt;p&gt;While many jobs have been offshored causing large scale unemployment, there is still hope for reskilling of workers and creating new jobs that would drive the economy the next two decades - like solar panels, &lt;a href=&quot;https://dotkay.github.io/2020/09/13/electric-batteries&quot;&gt;electric batteries&lt;/a&gt;, recycling of batteries, advanced technologies for water, air purification, education and healthcare, etc.&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 70%&quot;&gt;
&lt;i&gt;The tabular data from EPI report was parsed using BeautifulSoup, and the plots were done using plotly and chart_studio.&lt;/i&gt;
&lt;/span&gt;&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="US" />
      
        <category term="labor market" />
      
        <category term="economy" />
      

      

      
        <summary type="html">With 2020 being one of the worst in recent history, for many reasons fuelled by the pandemic. With many countries being unprepared to handle a pandemic of this size, it also exposed the global supply chain being highly optimized rather than flexible. It also exposed the inequality in society - healthcare, job security, income, etc. Many countries had to start manufacturing personal protective equipments (PPE), ventilators, etc. by themselves to serve the local needs rather than rely on the supply chain that got stalled. A couple of decades ago, many of these equipments were manufactured locally but over time, many of those got offshored. However, this post is not about unemployment due to the pandemic. It is more about loss of U.S. jobs over the period 2001-2017, mostly due to trade deficits, with data from this report and manufacturing data from BLS data. The first decade of the century was the worst for U.S. manufacturing jobs. It saw the steepest decline in such jobs, in a very long time. There are two conflicting theories around this - one argues the loss is due to increased automation, while the other attributes the loss to offshoring of such jobs. I could not find the data on rate of automation or increase in manufacturing jobs in other geographies during the time period in order to analyze it analytically. However the loss of jobs, whatever being the root cause, is itself staggering. import plotly.express as px fig = px.bar(emp_df[:100], x='Month', y='Manufacturing Jobs', height=600, color='Manufacturing Jobs', labels=dict({'Manufacturing Jobs':'Manufacturing Jobs (in thousands)'}), template='simple_white') fig.update_layout( autosize=False, width=700, height=700 ) fig.show() Apparently, about four decades ago the Bay Area in California was full of orange orchards, and a couple of decades later they all became startups working in electronics and software (Silicon Valley). They were not startups making apps that let teenagers poke and swipe at each other but advanced electronics and software that goes along with it, like routers, modems, semiconductor chips, etc. There were supposedly many small enterprises manufacturing circuit boards and assembling systems for these famous companies. An old video of Macintosh Factory in Fremont: But does it mean only the electronics jobs got offshored? Not really. If we look at the data deeper and look at the number of jobs lost state-wise, it gives a more detailed picture. Almost every major state in the U.S. has lost thousands of jobs from 2001-2017, with most of the loss happening between 2001-2009. Many other states would have seen loss of jobs in other industries like automobiles and steel included. fig = px.bar(df, x='State', y='Jobs Lost', height=600, color='% Jobs Lost', labels=dict({'Jobs Lost':'Jobs Lost (in thousands)'})) fig.show() If we look even deeper into the data, we can see how many jobs were lost in each state’s congressional districts. fig = px.bar(df, x='Total Jobs', y='State', color='% Jobs Lost', labels=dict({'State':'States and Congressional Districts'}), hover_name='Congressional District') fig.show() When I find reliable data on rate of automation and manufacturing jobs gained in other geographies, analysis of that data would help in putting the pieces together. While I am not against offshoring, I am all for a more flexible supply chain, rather than a super-optimized supply chain that would get disrupted affecting the lives and livelihoods of several people, as we witnessed last year when medical devices and PPE supply chain got disrupted. While many jobs have been offshored causing large scale unemployment, there is still hope for reskilling of workers and creating new jobs that would drive the economy the next two decades - like solar panels, electric batteries, recycling of batteries, advanced technologies for water, air purification, education and healthcare, etc. The tabular data from EPI report was parsed using BeautifulSoup, and the plots were done using plotly and chart_studio.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Is it GameStop vs Hedge Funds or GameStop vs Streaming? →</title>
      
      <link href="https://dotkay.github.io/2021/01/19/gme-wall-street/" rel="alternate" type="text/html" title="Is it GameStop vs Hedge Funds or GameStop vs Streaming?" />
      <published>2021-01-19T00:00:00+00:00</published>
      <updated>2021-01-19T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2021/01/19/gme-wall-street</id>
      <content type="html" xml:base="https://dotkay.github.io/2021/01/19/gme-wall-street/">&lt;p&gt;Everyone knows GameStop now, and its ticker symbol too - gamers, non-gamers, traders, non-traders, all alike.&lt;/p&gt;

&lt;p&gt;GameStop is a chain of retail stores that sells game merchandise, equipment and at one point (when games were sold on CDs) games. Retail is moving online and if the product is software, it has already moved. I can’t recollect the last time I saw Windows OS or Office sold in a CD.&lt;/p&gt;

&lt;p&gt;Hedge funds apparently make money by betting on such companies - borrow money or company shares from some lender promising to repay and in the mean time, bet on the downside of the company, wait for the price to crash, buy the stock (for cheap) and give it back to the lender (pocketing the difference). I am not sure how they pick companies to bet on. However, late last year and early January, GameStop was the candidate. In order to revolt againt this, some online enthusiasts mobilized themselves to buy options on this stock, thereby increasing the stock price (‘stock price’ not ‘company value’) that would hurt the Hedge funds’ intentions.&lt;/p&gt;

&lt;p&gt;Let us look at some data to see if Hedge funds are the real detterants to GameStop’s future or if there are other factors - like streaming. It was not just GameStop (GME), but also Nokia (NOK), AMC and Blackberry (BB) that went through this early January, but GameStop had the biggest change. Just to show the trend in these stocks (GameStop removed from the plot below as the change in GME was too high that the other trends wouldn’t show up well). Notice how the overall trend in stock prices have been over the last few years and how it changed towards the end of 2020 and early 2021.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amc_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amc_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Adj Close'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'AMC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nok_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nok_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Adj Close'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'NOK'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bb_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bb_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Adj Close'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/amc_nok_bb.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;In order to see what (game) streaming industry is like, I started looking for data on this - number of subscribers, streamers, etc. I found &lt;a href=&quot;https://twitchtracker.com/statistics&quot;&gt;Twitchtracker&lt;/a&gt; that tracks statistics on Twitch. Since Twitch’s data was easiest to get and well organized, I decided to look at just Twitch data (number of concurrent viewers) and plot it alongside GameStop stock price over the years.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;twinx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;line1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gme_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gme_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Adj Close'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;line2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;twitch_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;twitch_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'avg_concurrent_viewers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'green'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/gme_vs_twitch.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;The number of Twitch channels also keep increasing along with the number of viewers and this trend is only likely to continue during these pandemic times.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'avg_concurrent_viewers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;               
                     &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'avg_concurrent_channels'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'time_watched'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/twitch_data.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;On the other hand &lt;a href=&quot;https://www.theverge.com/2020/3/20/21188799/gamestop-california-store-closures-indefinite-coronavirus&quot;&gt;many retail stores like GameStop’s were hit hard&lt;/a&gt; during the pandemic.&lt;/p&gt;

&lt;p&gt;Everyone can infer the trend in the industry. Hedge funds are disliked for several reasons, some of them valid. But the future of gaming is online and if GameStop were to survive, it has to build that future than anchor itself in its glorious past.&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 70%&quot;&gt;
&lt;i&gt;The data from Twitchtracker was parsed using BeautifulSoup, and the plots were done using matplotlib, seaborn and plotly.&lt;/i&gt;
&lt;/span&gt;&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="GameStop" />
      
        <category term="markets" />
      
        <category term="short selling" />
      
        <category term="wall street" />
      

      

      
        <summary type="html">Everyone knows GameStop now, and its ticker symbol too - gamers, non-gamers, traders, non-traders, all alike. GameStop is a chain of retail stores that sells game merchandise, equipment and at one point (when games were sold on CDs) games. Retail is moving online and if the product is software, it has already moved. I can’t recollect the last time I saw Windows OS or Office sold in a CD. Hedge funds apparently make money by betting on such companies - borrow money or company shares from some lender promising to repay and in the mean time, bet on the downside of the company, wait for the price to crash, buy the stock (for cheap) and give it back to the lender (pocketing the difference). I am not sure how they pick companies to bet on. However, late last year and early January, GameStop was the candidate. In order to revolt againt this, some online enthusiasts mobilized themselves to buy options on this stock, thereby increasing the stock price (‘stock price’ not ‘company value’) that would hurt the Hedge funds’ intentions. Let us look at some data to see if Hedge funds are the real detterants to GameStop’s future or if there are other factors - like streaming. It was not just GameStop (GME), but also Nokia (NOK), AMC and Blackberry (BB) that went through this early January, but GameStop had the biggest change. Just to show the trend in these stocks (GameStop removed from the plot below as the change in GME was too high that the other trends wouldn’t show up well). Notice how the overall trend in stock prices have been over the last few years and how it changed towards the end of 2020 and early 2021. ... plt.plot(amc_df['Date'], amc_df['Adj Close'], label='AMC') plt.plot(nok_df['Date'], nok_df['Adj Close'], label='NOK') plt.plot(bb_df['Date'], bb_df['Adj Close'], label='BB') plt.plot() ... In order to see what (game) streaming industry is like, I started looking for data on this - number of subscribers, streamers, etc. I found Twitchtracker that tracks statistics on Twitch. Since Twitch’s data was easiest to get and well organized, I decided to look at just Twitch data (number of concurrent viewers) and plot it alongside GameStop stock price over the years. fig, ax1 = plt.subplots() ax2 = ax1.twinx() line1, = ax1.plot(gme_df['month'], gme_df['Adj Close'], color='blue') line2, = ax2.plot(twitch_df['month'], twitch_df['avg_concurrent_viewers']//1000, color='green') ... plt.show() The number of Twitch channels also keep increasing along with the number of viewers and this trend is only likely to continue during these pandemic times. fig = px.scatter(df, x='avg_concurrent_viewers', y='avg_concurrent_channels', size='time_watched') fig.show() On the other hand many retail stores like GameStop’s were hit hard during the pandemic. Everyone can infer the trend in the industry. Hedge funds are disliked for several reasons, some of them valid. But the future of gaming is online and if GameStop were to survive, it has to build that future than anchor itself in its glorious past. The data from Twitchtracker was parsed using BeautifulSoup, and the plots were done using matplotlib, seaborn and plotly.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">TSLA joins S&amp;amp;P 500 →</title>
      
      <link href="https://dotkay.github.io/2020/12/24/tsla-spy/" rel="alternate" type="text/html" title="TSLA joins S&amp;P 500" />
      <published>2020-12-24T00:00:00+00:00</published>
      <updated>2020-12-24T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2020/12/24/tsla-spy</id>
      <content type="html" xml:base="https://dotkay.github.io/2020/12/24/tsla-spy/">&lt;p&gt;A week ago Tesla Motors (TSLA) joined the S&amp;amp;P 500 Index - the stock market index that keeps track of the performance of 500 largest companies listed in stock markets in the US. Overall TSLA has been very volatile - many argue that the volatility (risk) indicates the opportunies for Tesla. Now that we are towards the end of the year, a pandemic year, let’s see how the S&amp;amp;P 500 performed and how Tesla performed.&lt;/p&gt;

&lt;p&gt;And in terms of the value of TSLA stock and S&amp;amp;P 500 Index, this is how they fared during this year:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/data_science/master/plots/tsla_gspc_2020.png&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tsla_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_data_yahoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TSLA&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                              &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2010-07-01&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                              &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2020-12-20&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                              &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snp_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snp_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Adj Close'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'S&amp;amp;P'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tsla_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tsla_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Adj Close'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TSLA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Market Value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;                       
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All the data was collected using pandas_datareader and the plots done using seaborn library.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="energy" />
      
        <category term="electric" />
      
        <category term="S&amp;P 500" />
      
        <category term="TSLA" />
      

      

      
        <summary type="html">A week ago Tesla Motors (TSLA) joined the S&amp;amp;P 500 Index - the stock market index that keeps track of the performance of 500 largest companies listed in stock markets in the US. Overall TSLA has been very volatile - many argue that the volatility (risk) indicates the opportunies for Tesla. Now that we are towards the end of the year, a pandemic year, let’s see how the S&amp;amp;P 500 performed and how Tesla performed. And in terms of the value of TSLA stock and S&amp;amp;P 500 Index, this is how they fared during this year: tsla_df = pdr.get_data_yahoo(&quot;TSLA&quot;, start=&quot;2010-07-01&quot;, end=&quot;2020-12-20&quot;, interval=&quot;wk&quot;) ... ... plt.plot(snp_df['Date'], snp_df['Adj Close'],label='S&amp;amp;P') plt.plot(tsla_df['Date'], tsla_df['Adj Close'], label='TSLA') plt.xlabel('Date') plt.ylabel('Market Value') ... ... All the data was collected using pandas_datareader and the plots done using seaborn library.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Humans and Space →</title>
      
      <link href="https://dotkay.github.io/2020/11/11/humans-and-space/" rel="alternate" type="text/html" title="Humans and Space" />
      <published>2020-11-11T00:00:00+00:00</published>
      <updated>2020-11-11T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2020/11/11/humans-and-space</id>
      <content type="html" xml:base="https://dotkay.github.io/2020/11/11/humans-and-space/">&lt;p&gt;Since time immmorial, humans have been interested in astronomy and space. This can be dated back to the &lt;a href=&quot;https://www.youtube.com/watch?v=jgjcy04PDRM&quot;&gt;work of Aryabhatta&lt;/a&gt; and the ideas of &lt;a href=&quot;https://www.youtube.com/watch?v=BMPaq8sf8Ko&quot;&gt;Greek astronomers&lt;/a&gt; like Aristotle. However, human journey to space, as we know today, happened much later. Today, we are in a race to conquer the planets and use our knowledge of space acquired over centuries to advance many technologies.&lt;/p&gt;

&lt;p&gt;Space is an important frontier for many technological advances. Global Positioning Systems (GPS), International Space Station (ISS), communication satellites, and (hopefully) very soon low earth orbit satellites beaming wireless internet are some of the greatest engineering marvels. Beyond space tourism and inhabiting Mars, there are many more important reasons why space might be very important.&lt;/p&gt;

&lt;p&gt;This fun post shows the number of trips made by American and Russian astronauts and the various expeditions to space over the last two decades.&lt;/p&gt;

&lt;iframe seamless=&quot;&quot; frameborder=&quot;0&quot; src=&quot;https://public.tableau.com/views/HumansandSpaceMissions/Dashboard1?:language=en-US&amp;amp;:display_count=n&amp;amp;:origin=viz_share_link?embed=yes&amp;amp;:display_count=yes&amp;amp;:showVizHome=no&quot; width=&quot;1100&quot; height=&quot;950&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      

      
        <category term="space" />
      
        <category term="technology" />
      
        <category term="USA" />
      
        <category term="Russia" />
      

      

      
        <summary type="html">Since time immmorial, humans have been interested in astronomy and space. This can be dated back to the work of Aryabhatta and the ideas of Greek astronomers like Aristotle. However, human journey to space, as we know today, happened much later. Today, we are in a race to conquer the planets and use our knowledge of space acquired over centuries to advance many technologies. Space is an important frontier for many technological advances. Global Positioning Systems (GPS), International Space Station (ISS), communication satellites, and (hopefully) very soon low earth orbit satellites beaming wireless internet are some of the greatest engineering marvels. Beyond space tourism and inhabiting Mars, there are many more important reasons why space might be very important. This fun post shows the number of trips made by American and Russian astronauts and the various expeditions to space over the last two decades.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Our Sense of Self →</title>
      
      <link href="https://dotkay.github.io/2020/10/10/sense-of-self/" rel="alternate" type="text/html" title="Our Sense of Self" />
      <published>2020-10-10T00:00:00+00:00</published>
      <updated>2020-10-10T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2020/10/10/sense-of-self</id>
      <content type="html" xml:base="https://dotkay.github.io/2020/10/10/sense-of-self/">&lt;p&gt;We perceive our sense of self as an amalgamation of the different sensory inputs - visual, tactile, locomotive, etc., that our brain processes and interprets. Or in other words, our sense of self is an interpretation made for us by our brain (mind) after processing several inputs. In olden days philosophers who tried to understand one’s true self found it difficult to reason about the interpretation of sense of self - are we really who we are? or are we manifestations of our mind’s interpretation of several inputs? This is a fascinating topic and lately neuroscience research is trying to understand which parts of the brain are processing and how our brain creates such interpretations.&lt;/p&gt;

&lt;p&gt;In his book, &lt;a href=&quot;https://www.amazon.com/Man-Who-Wasnt-There-Investigations/dp/0525954198&quot;&gt;The Man Who Wasn’t There&lt;/a&gt;, journalist Anil Ananthaswamy takes us through the neuroscience research on this topic. The main message of this book is that our sense of self is an interpretation of several inputs which are beyond just sensory inputs but our own physical body and society play a vital role. And in this age where Computer Scientists are working on Deep Learning as well as trying to understand the neurological pathways in order to build systems that mimic the human decision making apparatus, while that apparatus itself is not completely understood.&lt;/p&gt;

&lt;p&gt;What fascinates me about this study is how the mind’s computation of sense of self can be influenced (or cheated) by changing the mapping (think of it as lookup table entries) the mind preserves for different sensory and other inputs. In many cases, what we feel and believe our sense of self is, is just an interpretation (an entry in the table) that is fetched given the inputs. We can influence such inputs to pick up a different entry that would alter our sense of self. There is also a classic neuroscience experiment from the 90s that demonstrates how the mapping in our brain, representing our physical sense of self, can be altered within minutes. You can take a look at an example experiment below:&lt;/p&gt;

&lt;div class=&quot;img_container&quot;&gt;
  &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ASM12lpDDy0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;I am intrigued about the possibility of changing our emotional sense of self and if it could be done non-invasively using technology. Such a possibility would be a big boost to curing several mental disorders just by altering the mapping in the mind, when we know how the mapping is created, where it is stored and how it is interpreted. Also, one needs to be aware of ramifications of this - can such mappings be altered by say adversarial inputs - visual or societal - in the form of social media posts or news articles. We might be destroying our own sense of self by letting our mind interpret the inputs that we consume, without us realizing the end result - thinking we are who our mind interprets (influenced interpretation/self) rather than who we really are (actual self).&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="mind" />
      
        <category term="psychology" />
      
        <category term="philosophy" />
      
        <category term="neuroscience" />
      
        <category term="brain" />
      

      

      
        <summary type="html">We perceive our sense of self as an amalgamation of the different sensory inputs - visual, tactile, locomotive, etc., that our brain processes and interprets. Or in other words, our sense of self is an interpretation made for us by our brain (mind) after processing several inputs. In olden days philosophers who tried to understand one’s true self found it difficult to reason about the interpretation of sense of self - are we really who we are? or are we manifestations of our mind’s interpretation of several inputs? This is a fascinating topic and lately neuroscience research is trying to understand which parts of the brain are processing and how our brain creates such interpretations. In his book, The Man Who Wasn’t There, journalist Anil Ananthaswamy takes us through the neuroscience research on this topic. The main message of this book is that our sense of self is an interpretation of several inputs which are beyond just sensory inputs but our own physical body and society play a vital role. And in this age where Computer Scientists are working on Deep Learning as well as trying to understand the neurological pathways in order to build systems that mimic the human decision making apparatus, while that apparatus itself is not completely understood. What fascinates me about this study is how the mind’s computation of sense of self can be influenced (or cheated) by changing the mapping (think of it as lookup table entries) the mind preserves for different sensory and other inputs. In many cases, what we feel and believe our sense of self is, is just an interpretation (an entry in the table) that is fetched given the inputs. We can influence such inputs to pick up a different entry that would alter our sense of self. There is also a classic neuroscience experiment from the 90s that demonstrates how the mapping in our brain, representing our physical sense of self, can be altered within minutes. You can take a look at an example experiment below: I am intrigued about the possibility of changing our emotional sense of self and if it could be done non-invasively using technology. Such a possibility would be a big boost to curing several mental disorders just by altering the mapping in the mind, when we know how the mapping is created, where it is stored and how it is interpreted. Also, one needs to be aware of ramifications of this - can such mappings be altered by say adversarial inputs - visual or societal - in the form of social media posts or news articles. We might be destroying our own sense of self by letting our mind interpret the inputs that we consume, without us realizing the end result - thinking we are who our mind interprets (influenced interpretation/self) rather than who we really are (actual self).</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Internet Speeds and Cost →</title>
      
      <link href="https://dotkay.github.io/2020/09/19/worldwide-internet/" rel="alternate" type="text/html" title="Internet Speeds and Cost" />
      <published>2020-09-19T00:00:00+00:00</published>
      <updated>2020-09-19T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2020/09/19/worldwide-internet</id>
      <content type="html" xml:base="https://dotkay.github.io/2020/09/19/worldwide-internet/">&lt;p&gt;With online education becoming the norm due to the pandemic there is a growing debate about inequality that is brought about by access to reliable, affordable internet connectivity. At the same time, many countries in the developing world are seeing a huge increase in people connecting to the internet, many of them for the first time. With prices of internet becoming affordable in many parts of the developing world, more and more services are being offered online.&lt;/p&gt;

&lt;p&gt;If the number of subscriptions in 2019 were any indicator of the growth, the pandemic has only accelerated the subscriptions. More and more of our daily activities like education, work, essential services like shopping groceries, etc. all have come to rely on internet connectivity. The mobile phone, being the most affordable computer in many parts of the world today, with an internet connectivity dictates whether you can participate in these activities or not.&lt;/p&gt;

&lt;iframe seamless=&quot;&quot; frameborder=&quot;0&quot; src=&quot;https://public.tableau.com/views/MobileSubscriptions_16384135133810/MobileBroadbandSubscription2019?embed=yes&amp;amp;:display_count=yes&amp;amp;:showVizHome=no&quot; width=&quot;900&quot; height=&quot;950&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;While growing internet connectivity is certainly good news, let us see how affordable they are across the globe. The cost of internet in most parts of the developing world is much less than in the west. However, the quality of internet is not as good as in the west. The visualization below shows the cost of internet (in USD) in different parts of the world as well as the mean download speed. We can see that the mean download speed is relatively poor in many parts of the world. Crucially several activities like education, work, etc. require not just a connectivity but a good one.&lt;/p&gt;

&lt;iframe seamless=&quot;&quot; frameborder=&quot;0&quot; src=&quot;https://public.tableau.com/views/InternetSpeedsandPrices/Dashboard1?embed=yes&amp;amp;:display_count=yes&amp;amp;:showVizHome=no&quot; width=&quot;900&quot; height=&quot;950&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Even when the pandemic ceases to exist, many important everyday activities, commerce and essential services would require internet connectivity. With AI based upscaling technologies, we can hope that many of the educational material could be delivered even with a poor connectivity without reducing the effectiveness of the medium of delivery. In parallel, technologies like low orbit constellation of satellites delivering internet, like the ones being planned by Starlink and OneWeb should see its deployment fast enough in order to rebalance the loss created by internet inequality.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="online" />
      
        <category term="education" />
      
        <category term="internet" />
      
        <category term="technology" />
      

      

      
        <summary type="html">With online education becoming the norm due to the pandemic there is a growing debate about inequality that is brought about by access to reliable, affordable internet connectivity. At the same time, many countries in the developing world are seeing a huge increase in people connecting to the internet, many of them for the first time. With prices of internet becoming affordable in many parts of the developing world, more and more services are being offered online. If the number of subscriptions in 2019 were any indicator of the growth, the pandemic has only accelerated the subscriptions. More and more of our daily activities like education, work, essential services like shopping groceries, etc. all have come to rely on internet connectivity. The mobile phone, being the most affordable computer in many parts of the world today, with an internet connectivity dictates whether you can participate in these activities or not. While growing internet connectivity is certainly good news, let us see how affordable they are across the globe. The cost of internet in most parts of the developing world is much less than in the west. However, the quality of internet is not as good as in the west. The visualization below shows the cost of internet (in USD) in different parts of the world as well as the mean download speed. We can see that the mean download speed is relatively poor in many parts of the world. Crucially several activities like education, work, etc. require not just a connectivity but a good one. Even when the pandemic ceases to exist, many important everyday activities, commerce and essential services would require internet connectivity. With AI based upscaling technologies, we can hope that many of the educational material could be delivered even with a poor connectivity without reducing the effectiveness of the medium of delivery. In parallel, technologies like low orbit constellation of satellites delivering internet, like the ones being planned by Starlink and OneWeb should see its deployment fast enough in order to rebalance the loss created by internet inequality.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Electric Batteries and Supply Chain Economics →</title>
      
      <link href="https://dotkay.github.io/2020/09/13/electric-batteries/" rel="alternate" type="text/html" title="Electric Batteries and Supply Chain Economics" />
      <published>2020-09-13T00:00:00+00:00</published>
      <updated>2020-09-13T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2020/09/13/electric-batteries</id>
      <content type="html" xml:base="https://dotkay.github.io/2020/09/13/electric-batteries/">&lt;p&gt;One of the many issues the global pandemic has exposed is the (mostly) single point of failure in global supply chain systems. Over the last couple of decades global corporations optimized their supply chain to such an extent that it became far from flexible, while being extremely optimized. While the supply chain disruptions in today’s products - from face masks to medical equipments got exposed, this post is about the future supply chain challenges.&lt;/p&gt;

&lt;p&gt;With many countries rallying towards fighting climate change, electric vehicles are at the forefront of that fight. With the cost per kilowatt-hour touching $100/kWhr or even less, electric vehicles would not only make economic sense but also reduce the total cost of ownership drastically. While American companies like Tesla are at the head of the pack in innovation and execution, the components for uninterrupted production as well as security lie elsewhere - the supply chain for electric car batteries.&lt;/p&gt;

&lt;p&gt;As Benchmark’s Simon Mores says there are two ways of reducing cost of Li-ion batteries:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Controlling the supply of raw materials that go into batteries&lt;/li&gt;
  &lt;li&gt;Changing how batteries are made (scale)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While the prices of raw materials were at all time high, companies like Tesla maintain lead by controlling the manufacturing process - “the scale” as 25-40% of the cost of an electric vehicle can be attributed to the cost of the battery. That is where Gigafactories become interesting and so does controlling the supply chain. But so far, American auto companies, to a large extent, have only been assembling the components that constitute the battery. There is a lot of effort that goes into a battery before this final assembly.&lt;/p&gt;

&lt;p&gt;Let us break this apart looking at the value chain of electric battery manufacturing:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/tmp/main/misc/ev_bat_value_chain.PNG&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;If one were to superimpose the geographies that control different parts of the value chain, one could immediately see the premonitions of future supply chain challenges.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;center&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotkay/tmp/main/misc/ev_bat_value_chain_geo.PNG&quot; /&gt;&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;More than 50% of every one of the raw materials is dependent on one geography, which is a recipe for future disruptions. As Benchmark’s Vivas Kumar points out, the only part of the value chain that can’t be moved around are the mines themselves. Every other part of the value chain can be located in different parts of the globe. Most of the early stages of the value chain like Cathode, cell manufacturing, etc. are controlled predominantly by specific geographies that would be a supply chain and security risk when electric vehicles become like mobile phones. A wise thing for such an industry like Auto to do is to shore up the different components so that the critical component (battery) supply is not disrupted in the future.&lt;/p&gt;

&lt;p&gt;One has to wait and see if the electric battery supply chain gets reshored and does not become another disruption waiting to happen or if short term optimization goals will lead to long-term disasters, just as it is happening in semiconductors and electronics.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="electric battery" />
      
        <category term="Li" />
      
        <category term="Manufacturing" />
      

      

      
        <summary type="html">One of the many issues the global pandemic has exposed is the (mostly) single point of failure in global supply chain systems. Over the last couple of decades global corporations optimized their supply chain to such an extent that it became far from flexible, while being extremely optimized. While the supply chain disruptions in today’s products - from face masks to medical equipments got exposed, this post is about the future supply chain challenges. With many countries rallying towards fighting climate change, electric vehicles are at the forefront of that fight. With the cost per kilowatt-hour touching $100/kWhr or even less, electric vehicles would not only make economic sense but also reduce the total cost of ownership drastically. While American companies like Tesla are at the head of the pack in innovation and execution, the components for uninterrupted production as well as security lie elsewhere - the supply chain for electric car batteries. As Benchmark’s Simon Mores says there are two ways of reducing cost of Li-ion batteries: Controlling the supply of raw materials that go into batteries Changing how batteries are made (scale) While the prices of raw materials were at all time high, companies like Tesla maintain lead by controlling the manufacturing process - “the scale” as 25-40% of the cost of an electric vehicle can be attributed to the cost of the battery. That is where Gigafactories become interesting and so does controlling the supply chain. But so far, American auto companies, to a large extent, have only been assembling the components that constitute the battery. There is a lot of effort that goes into a battery before this final assembly. Let us break this apart looking at the value chain of electric battery manufacturing: If one were to superimpose the geographies that control different parts of the value chain, one could immediately see the premonitions of future supply chain challenges. More than 50% of every one of the raw materials is dependent on one geography, which is a recipe for future disruptions. As Benchmark’s Vivas Kumar points out, the only part of the value chain that can’t be moved around are the mines themselves. Every other part of the value chain can be located in different parts of the globe. Most of the early stages of the value chain like Cathode, cell manufacturing, etc. are controlled predominantly by specific geographies that would be a supply chain and security risk when electric vehicles become like mobile phones. A wise thing for such an industry like Auto to do is to shore up the different components so that the critical component (battery) supply is not disrupted in the future. One has to wait and see if the electric battery supply chain gets reshored and does not become another disruption waiting to happen or if short term optimization goals will lead to long-term disasters, just as it is happening in semiconductors and electronics.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Technologies in Online Education →</title>
      
      <link href="https://dotkay.github.io/2020/07/01/online-education-part-2/" rel="alternate" type="text/html" title="Technologies in Online Education" />
      <published>2020-07-01T00:00:00+00:00</published>
      <updated>2020-07-01T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2020/07/01/online-education-part-2</id>
      <content type="html" xml:base="https://dotkay.github.io/2020/07/01/online-education-part-2/">&lt;p&gt;In a &lt;a href=&quot;https://dotkay.github.io/2020/05/25/online-education-part-1&quot;&gt;previous post&lt;/a&gt; we saw the challenges in accessing quality education digitally. In this post, we will look at some of the disparate pieces of technology that could work together to make online education less expensive, more efficient and hopefully more accessible.&lt;/p&gt;

&lt;p&gt;From a 45000 ft. view, online education is just about a video playing in a TV or a computer browser, much like any TV program or YouTube or Vimeo video would. But there is a lot more to it as you go down into the details. Even in its simplest form (i.e. no authentication, account validation, etc.,) most of them contain video and audio streams, which itself is the first bottleneck for places which have poor internet bandwidths, if at all internet exists.&lt;/p&gt;

&lt;p&gt;So, the very first technical problem is to address bandwidth the way several streaming services address them - by encoding them in different qualities and formats, cache them in CDNs or edge networks efficiently, predict their access patterns and serve them efficiently. This alone may not be enough - for most of the world the only access to internet may be through a not-so-good mobile data network which might still be prohibitively expensive to stream high quality videos.&lt;/p&gt;

&lt;p&gt;This brings us to the second problem: video quality. Since most educational videos, unlike action movie frames, are to a large extent relatively slow moving and not lots of dynamic pixel changes, AI techniques used for &lt;em&gt;Super Resolution&lt;/em&gt; can be employed to create a higher resolution content on device even if the incoming videos from the nearest edge network are low resolution ones. But what about the device - does it need to be one with an expensive GPU attached to it? Not really.&lt;/p&gt;

&lt;p&gt;That brings us to the third problem: device specifications. The most desired characteristic of the device would be longer battery life and quick recharge capability. Since most education content (the content itself) is generated before the class (the event) and the content is just delivered live, modest processing power should be enough to do the inference side of super resolution. Chromebooks and android devices are a first step in this direction, but a main area of improvement would also be how long the device lasts.&lt;/p&gt;

&lt;p&gt;Most students are visual learners but most educational content is dry. One could use components of game development engines to develop tools for teachers so that they can create interesting animations and content for their class without having to learn and program using game engines. We have been living with Powerpoint for content creation for more than three decades and may be it is time to add more interesting content creation capabilities to Powerpoint or move to an application that provides such capabilities.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Most digital content is created in English, Mandarin and Spanish while there are many other languages and many research suggest that one’s first language is the best medium for early education.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While translating languages from one to another automatically is not effective as of today, future AI technologies would hopefully be able to bridge this gap as well.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Students with special needs would require more help both from technology and human beings in order to enjoy and benefit from online education. If technology can leave more time for teachers they could invest that gained time on students with special needs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are several other problems where technology could play a role. One could create authentication mechanisms for examinations and awarding certificate of completion of courses. Zoom like video conferencing technologies could be used both for delivering the content as well as break rooms for further guidance. Automated algorithms could test basics of the students’ knowledge of a topic and have progressively challenging exercises, rather than a one-size-fits-all teaching and evaluation model that is currently in place. A content created by one teacher or school can be securely shared with another school, optimizing the time and effort put in for content creation. The content itself could be stored in cloud storage and personalization algorithms could recommend what other YouTube or other content would be helpful in understanding the concepts in a specific topic, instead of the students straying all over the web looking for explanations to fortify their understanding.&lt;/p&gt;

&lt;p&gt;There are lots of ways things could improve. But in reality, most such softwares are fragmented. One might use a chromebook while the slides sent out by the teacher would be in powerpoint format, one video would be on YouTube, one would be lying as an mpeg file in a shared folder. One would use zoom and the other Webex or Teams and there is no way these applications are play well together. Further, the current techniques for first party and third party integrations of content creation and marketing might bump up content rich in marketing dollars while relatively punishing content rich in content. Nevertheless, technology would play a huge role not only in school education but also enterprise reskilling (education technology would be an enterprise product as well) and the one who wins would be the one who builds the strongest platform combining the disparate technologies listed above, and some more.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="online" />
      
        <category term="education" />
      
        <category term="technology" />
      

      

      
        <summary type="html">In a previous post we saw the challenges in accessing quality education digitally. In this post, we will look at some of the disparate pieces of technology that could work together to make online education less expensive, more efficient and hopefully more accessible. From a 45000 ft. view, online education is just about a video playing in a TV or a computer browser, much like any TV program or YouTube or Vimeo video would. But there is a lot more to it as you go down into the details. Even in its simplest form (i.e. no authentication, account validation, etc.,) most of them contain video and audio streams, which itself is the first bottleneck for places which have poor internet bandwidths, if at all internet exists. So, the very first technical problem is to address bandwidth the way several streaming services address them - by encoding them in different qualities and formats, cache them in CDNs or edge networks efficiently, predict their access patterns and serve them efficiently. This alone may not be enough - for most of the world the only access to internet may be through a not-so-good mobile data network which might still be prohibitively expensive to stream high quality videos. This brings us to the second problem: video quality. Since most educational videos, unlike action movie frames, are to a large extent relatively slow moving and not lots of dynamic pixel changes, AI techniques used for Super Resolution can be employed to create a higher resolution content on device even if the incoming videos from the nearest edge network are low resolution ones. But what about the device - does it need to be one with an expensive GPU attached to it? Not really. That brings us to the third problem: device specifications. The most desired characteristic of the device would be longer battery life and quick recharge capability. Since most education content (the content itself) is generated before the class (the event) and the content is just delivered live, modest processing power should be enough to do the inference side of super resolution. Chromebooks and android devices are a first step in this direction, but a main area of improvement would also be how long the device lasts. Most students are visual learners but most educational content is dry. One could use components of game development engines to develop tools for teachers so that they can create interesting animations and content for their class without having to learn and program using game engines. We have been living with Powerpoint for content creation for more than three decades and may be it is time to add more interesting content creation capabilities to Powerpoint or move to an application that provides such capabilities. Most digital content is created in English, Mandarin and Spanish while there are many other languages and many research suggest that one’s first language is the best medium for early education. While translating languages from one to another automatically is not effective as of today, future AI technologies would hopefully be able to bridge this gap as well. Students with special needs would require more help both from technology and human beings in order to enjoy and benefit from online education. If technology can leave more time for teachers they could invest that gained time on students with special needs. There are several other problems where technology could play a role. One could create authentication mechanisms for examinations and awarding certificate of completion of courses. Zoom like video conferencing technologies could be used both for delivering the content as well as break rooms for further guidance. Automated algorithms could test basics of the students’ knowledge of a topic and have progressively challenging exercises, rather than a one-size-fits-all teaching and evaluation model that is currently in place. A content created by one teacher or school can be securely shared with another school, optimizing the time and effort put in for content creation. The content itself could be stored in cloud storage and personalization algorithms could recommend what other YouTube or other content would be helpful in understanding the concepts in a specific topic, instead of the students straying all over the web looking for explanations to fortify their understanding. There are lots of ways things could improve. But in reality, most such softwares are fragmented. One might use a chromebook while the slides sent out by the teacher would be in powerpoint format, one video would be on YouTube, one would be lying as an mpeg file in a shared folder. One would use zoom and the other Webex or Teams and there is no way these applications are play well together. Further, the current techniques for first party and third party integrations of content creation and marketing might bump up content rich in marketing dollars while relatively punishing content rich in content. Nevertheless, technology would play a huge role not only in school education but also enterprise reskilling (education technology would be an enterprise product as well) and the one who wins would be the one who builds the strongest platform combining the disparate technologies listed above, and some more.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Global Trends in Electric Vehicles →</title>
      
      <link href="https://dotkay.github.io/2020/06/06/evs/" rel="alternate" type="text/html" title="Global Trends in Electric Vehicles" />
      <published>2020-06-06T00:00:00+00:00</published>
      <updated>2020-06-06T00:00:00+00:00</updated>
      <id>https://dotkay.github.io/2020/06/06/evs</id>
      <content type="html" xml:base="https://dotkay.github.io/2020/06/06/evs/">&lt;p&gt;In an &lt;a href=&quot;https://dotkay.github.io/2020/06/01/covid-vs-coal/&quot;&gt;earlier post&lt;/a&gt;, we learnt something that we do not see everyday, even if we work in a coal mine, as the variety of energy and the consumption end points blind us from looking at the full picture. Today, we will look at some trends that we see all around us, all the time - Electric vehicles (EVs).&lt;/p&gt;

&lt;p&gt;For most of us, an &lt;em&gt;electric car&lt;/em&gt; immediately reminds us of Tesla - the innovative American automobile manufacturer that is to become the world’s most valuable automobile company very soon. Tesla is also the company that created an electric car revolution. Tesla’s success, in many ways, drove other automakers to accelerate their offering of all-electric products. We saw that the transition was not overnight. Many built hybrid vehicles (HEV), range-extended electric vehicles, plug-in hybrid vehicles (PHEV), before building all electric, or battery electric vehicles (BEV). However, if one is to guess which country on the planet has the most number of electric cars it would most likely be the US or EU, because of Tesla and the likes of VW or BMW (both of which make electric cars). Let’s see how the actual answer unfolds.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.iea.org/reports/global-ev-outlook-2020&quot;&gt;IEA’s global outlook&lt;/a&gt; and data show some impressive numbers. To quote from their report,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Only about 17 000 electric cars were on the world’s roads in 2010. By 2019, that number had swelled to 7.2 million, 47% of which were in The People’s Republic of China.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;img_container&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/images/energy/evs.PNG&quot; alt=&quot;EVs in the world&quot; class=&quot;img=responsive&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Further, despite purchase subsidies for electric cars were cut in many geographies (like tax credits in the US) and the resulting drop in electric car sales, the total number electric vehicles in China, EU and the US are still very impressive - 2.58 million BEVs in China compared to 0.88 million BEVs in the US and 0.97 million BEVs in the EU.&lt;/p&gt;

&lt;p&gt;One would start thinking what other industries are getting transformed along with the transformation of automotive industry. The implications of this transformation are huge touching several industries from service industry, retail and insurance. The analysis of the transformation itself would give fascninating insights. That would be the topic of a future post.&lt;/p&gt;</content>

      
      
      
      
      

      

      
        <category term="energy" />
      
        <category term="electric" />
      
        <category term="cars" />
      
        <category term="world" />
      
        <category term="EV" />
      

      

      
        <summary type="html">In an earlier post, we learnt something that we do not see everyday, even if we work in a coal mine, as the variety of energy and the consumption end points blind us from looking at the full picture. Today, we will look at some trends that we see all around us, all the time - Electric vehicles (EVs). For most of us, an electric car immediately reminds us of Tesla - the innovative American automobile manufacturer that is to become the world’s most valuable automobile company very soon. Tesla is also the company that created an electric car revolution. Tesla’s success, in many ways, drove other automakers to accelerate their offering of all-electric products. We saw that the transition was not overnight. Many built hybrid vehicles (HEV), range-extended electric vehicles, plug-in hybrid vehicles (PHEV), before building all electric, or battery electric vehicles (BEV). However, if one is to guess which country on the planet has the most number of electric cars it would most likely be the US or EU, because of Tesla and the likes of VW or BMW (both of which make electric cars). Let’s see how the actual answer unfolds. IEA’s global outlook and data show some impressive numbers. To quote from their report, Only about 17 000 electric cars were on the world’s roads in 2010. By 2019, that number had swelled to 7.2 million, 47% of which were in The People’s Republic of China. Further, despite purchase subsidies for electric cars were cut in many geographies (like tax credits in the US) and the resulting drop in electric car sales, the total number electric vehicles in China, EU and the US are still very impressive - 2.58 million BEVs in China compared to 0.88 million BEVs in the US and 0.97 million BEVs in the EU. One would start thinking what other industries are getting transformed along with the transformation of automotive industry. The implications of this transformation are huge touching several industries from service industry, retail and insurance. The analysis of the transformation itself would give fascninating insights. That would be the topic of a future post.</summary>
      

      
      
    </entry>
  
  
</feed>
